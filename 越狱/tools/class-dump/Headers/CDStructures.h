//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GMSModelStyleIcon, GMSx_GPBMessage, IFlyPcmPlayer, NSData, NSMutableData, NSObject, NSOutputStream, NSString, UIColor;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AMapPBEncodeItem;

struct APTaskInfoData {
    unsigned char _field1[30];
};

struct AbsolutePosition;

struct AdjustableTextureShaderState;

struct Alignment {
    unsigned char value_;
};

struct AreaGroup;

struct AudioQueueBuffer;

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct BaseEntity;

struct Behavior;

struct BlendState;

struct BlockBasedBehavior;

struct BubbleBehavior;

struct BuildingGroupFadeBehavior;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CalloutImageLayout {
    struct {
        unsigned int x;
        unsigned int y;
    } imageAnchor;
    CDStruct_0a4f9365 contentCollisionBounds;
    CDStruct_0a4f9365 arrowCollisionBounds;
    struct {
        unsigned int width;
        unsigned int height;
    } imageSize;
};

struct CalloutSharedState;

struct CalloutStrategy;

struct Camera;

struct ClientVectorOpsBehavior;

struct Collidable2D {
    CDUnknownFunctionPointerType *_field1;
};

struct CollidableSet2D;

struct ColorMaskState;

struct ColorMatrix {
    float *m_;
};

struct ColorSpan;

struct ColoredOverlayBehavior;

struct ColoredPoint;

struct CookieStore;

struct DASHDataInputProvider {
    CDUnknownFunctionPointerType *_vptr$DataInputProvider;
    _Bool doneAdding_;
    _Bool gotError_;
    NSObject *data_ready_semaphore_;
    NSObject *access_semaphore_;
    NSMutableData *data_;
    char *base_;
    unsigned long long size_;
    unsigned long long offset_;
};

struct DataInputProvider;

struct DefaultAlphaShaderState;

struct DefaultShaderState;

struct DepthBufferState;

struct EntityRenderer;

struct EntityState;

struct ExpansionInfo {
    unsigned short _field1;
    id _field2;
    _Bool _field3;
    id _field4;
};

struct FS_CGPointF {
    float _field1;
    float _field2;
};

struct FaceTracker {
    struct TrackerConf _field1;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field2;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field3;
    struct vector<TrackedFaceInfo, std::__1::allocator<TrackedFaceInfo>> _field4;
    void *_field5;
};

struct FeatureData;

struct Frustum2D {
    CDUnknownFunctionPointerType *_field1;
    struct Point2D _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Point2D _field5;
    struct Rectangle2D _field6;
};

struct GLAlphaOnlyTextureShaderState;

struct GLAlphaShaderState;

struct GLBasicShaderState;

struct GLBuildingFadingAlphaShaderState;

struct GLBuildingFadingShaderState;

struct GLColorPair {
    unsigned int first;
    unsigned int second;
};

struct GLLabel;

struct GLLabelGroup {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>>> _field2;
    int _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    struct LabelGroup _field10;
    id _field11;
    id _field12;
    vector_12bd641b _field13;
    int _field14;
    int _field15;
    float _field16;
    float _field17;
    int _field18;
    _Bool _field19;
    id _field20;
    struct reffed_ptr<gmscore::vector::IconTextureCache> _field21;
    struct GLLabel *_field22;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field23;
    id _field24;
    id _field25;
};

struct GLState {
    CDUnknownFunctionPointerType *_field1;
    struct GLrectangle _field2;
    struct GLrectangle _field3;
    _Bool _field4;
    unsigned int _field5;
    struct Vector4f _field6;
    _Bool _field7;
    int _field8;
    _Bool _field9;
    float _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    unsigned int _field19;
    _Bool _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23[8];
    unsigned int _field24;
    _Bool _field25;
    unsigned int _field26;
    _Bool _field27;
    unsigned int _field28;
    _Bool _field29;
    unsigned int _field30;
    _Bool _field31;
    unsigned int _field32;
    unsigned int _field33;
    _Bool _field34;
    unsigned int _field35;
    int _field36;
    unsigned int _field37;
    _Bool _field38;
    unsigned int _field39;
    _Bool _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    _Bool _field44;
    float _field45;
    float _field46;
    _Bool _field47;
    unsigned int _field48;
    _Bool _field49;
    struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> _field50;
    float _field51;
    _Bool _field52;
    unsigned long long _field53;
    unsigned int _field54;
    unsigned int _field55;
};

struct GLrectangle {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct GMSContourList {
    vector_12bd641b indices_;
    vector_c5a5cb90 vertices_;
};

struct GMSCoordinate {
    double latitude;
    double longitude;
};

struct GMSCoordinateRectangle {
    struct GMSCoordinate center;
    struct GMSCoordinate span;
};

struct GMSCopyrightOverlayPadding {
    double _field1;
    double _field2;
    long long _field3;
};

struct GMSEntityTapClassStatusSet {
    _Bool is_whitelist_;
    struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> classes_;
};

struct GMSEntityTapOrdering {
    struct GMSEntityTapPriority tapPriority;
    struct tuple<int, int, unsigned int> zOrder;
    short rank;
};

struct GMSEntityTapPriority {
    unsigned short tapClass;
    unsigned short relativePriority;
};

struct GMSFeatureID {
    unsigned long long cellID;
    unsigned long long fprint;
};

struct GMSGeneratedTextureAtlas;

struct GMSLazyMultiZoomStyle;

struct GMSMarkupBehavior;

struct GMSRocketIconService {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> _field2;
};

struct GMSStippleTexturePool;

struct GMSTextureAtlas {
    int _field1;
    int _field2;
    int _field3;
    struct GMSTextureAtlasItem *_field4;
};

struct GMSTextureAtlasItem;

struct GMSTileTypeInfo {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_7ae79ea2 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct Holder;

struct IESBleAuth {
    CDUnknownFunctionPointerType *_field1;
};

struct IEsGMApi {
    CDUnknownFunctionPointerType *_field1;
};

struct IFlyAQCallBackStruct {
    struct OpaqueAudioQueue *queue;
    unsigned int frameCount;
    struct AudioQueueBuffer *mBuffers[3];
    struct AudioStreamBasicDescription mDataFormat;
    unsigned int sampleLen;
    unsigned int playPtr;
    IFlyPcmPlayer *player;
    CDStruct_183601bc *bufferQueue;
};

struct IOSGLState;

struct IOSPlatformContext {
    CDUnknownFunctionPointerType *_field1;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> _field2;
    struct unique_ptr<GMSx_gmm_photo::api::SchedulingService, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> _field3;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> _field4;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> _field5;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> _field6;
    id _field7;
};

struct IVIOSGLContext;

struct IconHandle {
    struct IconOptions *_field1;
};

struct IconOptions;

struct IconRenderer {
    CDUnknownFunctionPointerType *_field1;
};

struct IconTextureCache;

struct ImageData;

struct ImageDataSignature {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct IndexedTriangleList2D {
    vector_52d06928 vertices_;
    vector_12bd641b indices_;
};

struct IndoorID {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    _Bool _field4;
};

struct IndoorTileAnimationBehavior;

struct JavaDataInput {
    struct DataInputProvider *_field1;
};

struct JavaDataOutput {
    id _field1;
};

struct LFEasyNoticeBarConfig {
    NSString *title;
    unsigned long long type;
    double margin;
    UIColor *textColor;
    UIColor *backgroundColor;
    long long statusBarStyle;
};

struct LLColor {
    double _field1;
    double _field2;
    double _field3;
};

struct LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmscore::model::GMSFeatureIDHashFunc, gmscore::model::GMSFeatureIDEqualFunc, false>;

struct LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>;

struct LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>;

struct LabelBucketRestriction;

struct LabelDedupingRule;

struct LabelElement;

struct LabelGroup {
    struct vector<gmscore::model::LabelElement, std::__1::allocator<gmscore::model::LabelElement>> label_elements_;
    struct Alignment alignment_;
    basic_string_90719d97 text_;
};

struct LabelProvider;

struct LabelSnapshot;

struct LabelSource;

struct LabelSourceSet {
    CDUnknownFunctionPointerType *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> _field2;
    struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> _field3;
};

struct LabelUpdateDelegate;

struct LabelableFeature;

struct LabelableFeatureSelector;

struct LabelingBehavior;

struct LabelingUpdateListener;

struct LayeredFeatureGroup {
    struct multiset<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> _field1;
    struct map<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>, std::__1::less<GMSFeatureType>, std::__1::allocator<std::__1::pair<const GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> _field2;
};

struct Licenser {
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field1;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
    vector_9492931a _field3;
    basic_string_90719d97 _field4;
    struct cJSON *_field5;
};

struct LineState;

struct Listener;

struct MACoordinateBounds {
    struct CLLocationCoordinate2D northEast;
    struct CLLocationCoordinate2D southWest;
};

struct MACoordinateRegion {
    struct CLLocationCoordinate2D center;
    struct MACoordinateSpan span;
};

struct MACoordinateSpan {
    double latitudeDelta;
    double longitudeDelta;
};

struct MAMapPoint {
    double x;
    double y;
};

struct MAMapRect {
    struct MAMapPoint origin;
    struct MAMapSize size;
};

struct MAMapSize {
    double width;
    double height;
};

struct MATileOverlayPath {
    long long _field1;
    long long _field2;
    long long _field3;
    double _field4;
};

struct MDCActivityIndicatorMotionSpecIndeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
    struct MDMMotionTiming _field3;
    struct MDMMotionTiming _field4;
};

struct MDCActivityIndicatorMotionSpecProgress {
    struct MDMMotionTiming _field1;
};

struct MDCActivityIndicatorMotionSpecTransitionToDeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
};

struct MDCActivityIndicatorMotionSpecTransitionToIndeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
};

struct MDMMotionCurve {
    unsigned long long _field1;
    double _field2[4];
};

struct MDMMotionRepetition {
    unsigned long long _field1;
    double _field2;
    _Bool _field3;
};

struct MDMMotionTiming {
    double _field1;
    double _field2;
    struct MDMMotionCurve _field3;
    struct MDMMotionRepetition _field4;
};

struct MarkupPolyline;

struct MarkupRevealOptions {
    double _field1;
    double _field2;
    _Bool _field3;
    int _field4;
};

struct MarkupSprite {
    basic_string_90719d97 _field1;
    struct Vector2f _field2;
    int _field3;
    int _field4;
};

struct MiniCodedInputData {
    char *_field1;
    int _field2;
    int _field3;
};

struct MiniCodedOutputData {
    char *_field1;
    unsigned long long _field2;
    int _field3;
};

struct ModelRendererValue<bool>;

struct ModelRendererValue<float>;

struct ModelRendererValue<unsigned int>;

struct MutableState;

struct MutableStateTracker;

struct Mutex {
    struct _opaque_pthread_mutex_t mutex_;
    _Bool is_safe_;
    _Bool destroy_;
};

struct MyLocationIndicator;

struct NSDictionary {
    Class _field1;
};

struct NSSet {
    Class _field1;
};

struct NormalVector;

struct OpaqueAudioFileID;

struct OpaqueAudioQueue;

struct PPSSignaturePoint {
    union _GLKVector3 vertex;
    union _GLKVector3 color;
};

struct Point2D {
    int x_;
    int y_;
};

struct Point3D {
    int _field1;
    int _field2;
    int _field3;
};

struct PointsBehavior;

struct PolylineSpan2D {
    struct __wrap_iter<const gmscore::model::Point2D *> _field1;
    struct __wrap_iter<const gmscore::model::Point2D *> _field2;
    struct __wrap_iter<const gmscore::model::Point2D *> _field3;
    float _field4;
    struct Rectangle2D _field5;
};

struct RARHeaderDataEx {
    char _field1[1024];
    int _field2[1024];
    char _field3[1024];
    int _field4[1024];
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    char *_field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    char _field22[32];
    unsigned int _field23;
    int *_field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned int _field33[988];
};

struct RAROpenArchiveDataEx {
    char *_field1;
    int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    char *_field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    CDUnknownFunctionPointerType _field10;
    long long _field11;
    unsigned int _field12[28];
};

struct Rectangle2D {
    CDUnknownFunctionPointerType *_vptr$Collidable2D;
    struct Point2D low_;
    struct Point2D high_;
};

struct Rectangle2f {
    CDUnknownFunctionPointerType *_field1;
    struct Vector2f _field2;
    struct Vector2f _field3;
};

struct Region2D {
    CDUnknownFunctionPointerType *_field1;
};

struct Region2f {
    CDUnknownFunctionPointerType *_field1;
};

struct RenderBin;

struct RenderTarget;

struct Renderer {
    CDUnknownFunctionPointerType *_field1;
};

struct ResourceFinder {
    CDUnknownFunctionPointerType *_field1;
};

struct STLRange<const std::__1::vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>>> {
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field1;
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>>> {
    struct __wrap_iter<const gmscore::model::Alignment *> _field1;
    struct __wrap_iter<const gmscore::model::Alignment *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>>> {
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field1;
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>>> {
    struct __wrap_iter<const gmscore::model::Point3D *> _field1;
    struct __wrap_iter<const gmscore::model::Point3D *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>>> {
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field1;
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>>> {
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field1;
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field2;
};

struct STLRange<const std::__1::vector<int, std::__1::allocator<int>>> {
    struct __wrap_iter<const int *> _field1;
    struct __wrap_iter<const int *> _field2;
};

struct STLRange<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>> {
    struct __wrap_iter<const unsigned int *> _field1;
    struct __wrap_iter<const unsigned int *> _field2;
};

struct SchedulingService;

struct Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>;

struct Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>;

struct Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>;

struct Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>;

struct ServicesConfig {
    basic_string_90719d97 product_id;
    basic_string_90719d97 language;
    basic_string_90719d97 country;
    basic_string_90719d97 geo_photo_metadata_url;
    basic_string_90719d97 geo_photo_single_image_url;
    basic_string_90719d97 geo_photo_local_tiled_single_image_url;
    basic_string_90719d97 geo_photo_area_connectivity_url;
    basic_string_90719d97 alleycat_url;
    basic_string_90719d97 fife_url;
    struct vector<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> tile_templates;
};

struct SpotlightParams {
    _Bool tactile_styler_enabled;
    _Bool spotlight_labels_visible;
    _Bool secondary_clickability_enabled;
};

struct StencilState;

struct StickerBehavior;

struct StringTableEntry;

struct Stroke {
    unsigned int color_;
    unsigned int end_color_;
    unsigned short width_eighths_;
    struct vector<short, std::__1::allocator<short>> dashes_;
    float width_;
    int orthogonal_offset_eighths_;
    basic_string_90719d97 texture_url_;
    basic_string_90719d97 start_cap_url_;
    basic_string_90719d97 end_cap_url_;
    float animation_duration_;
};

struct StyleID {
    long long styleID;
    unsigned long long type;
};

struct TappableMapItemQueue {
    struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> items_;
    struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> inactive_items_;
    struct GMSEntityTapClassStatusSet active_tap_classes_;
};

struct TextBoxStyle {
    unsigned int fill_color_;
    struct Stroke stroke_;
    GMSModelStyleIcon *box_icon_;
};

struct TextStyle {
    unsigned int color_;
    unsigned int outline_color_;
    float outline_width_;
    unsigned char size_;
    float leading_ratio_;
    float tracking_ratio_;
    int attributes_;
};

struct TextureAtlasesContext;

struct TextureCache;

struct TextureShaderState;

struct TextureState;

struct TileLabelProvider;

struct TilePreppingInfo {
    id _field1;
    id _field2;
    _Bool _field3;
    _Bool _field4;
};

struct TileTemplate;

struct TileUpdaterBehavior;

struct Time {
    CDUnknownFunctionPointerType *_field1;
};

struct TrackedFaceInfo;

struct TrackerConf {
    float _field1;
    struct vector<float, std::__1::allocator<float>> _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15[3];
    int _field16;
    int _field17;
    float _field18;
    int _field19;
    int _field20;
};

struct Triangle2D;

struct TriangleList2D {
    struct vector<gmscore::model::Triangle2D, std::__1::allocator<gmscore::model::Triangle2D>> triangles_;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UMCLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct UMCMRotationRate {
    double _field1;
    double _field2;
    double _field3;
};

struct UpdateMyLocationBehaviorInternal;

struct Vector2f;

struct Vector4f;

struct Vector<3, double> {
    double elem_[3];
};

struct VelocityItem;

struct VertexData;

struct ViewRenderTargetChangedSizeListener;

struct WCTAnyProperty {
    basic_string_90719d97 _field1;
    Class _field2;
};

struct WCTBinding {
    Class _field1;
    struct map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>, WCDB::CaseInsensiveComparetor, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>>> _field2;
    struct list<std::__1::shared_ptr<WCTColumnBinding>, std::__1::allocator<std::__1::shared_ptr<WCTColumnBinding>>> _field3;
    struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>>> _field4;
    struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>>> _field5;
    struct shared_ptr<std::__1::list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>>> _field6;
    struct shared_ptr<std::__1::list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>> _field7;
    basic_string_90719d97 _field8;
};

struct WCTColumnBinding;

struct WCTProperty {
    basic_string_90719d97 _field1;
    Class _field2;
    struct shared_ptr<WCTColumnBinding> _field3;
};

struct WCTPropertyList {
    struct __list_node_base<const WCTProperty, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCTProperty, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct WFSegmentEndpoints {
    struct Point2D _field1;
    struct Point2D _field2;
};

struct WrappedFrustum2D {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Point2D _field5;
    struct Point2D _field6;
    struct Frustum2D _field7;
    struct WFSegmentEndpoints _field8[6];
};

struct WrappedRectangle2D {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Rectangle2D _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct _00066 {
    struct _00651 {
        struct _00651 {
            struct _00219 _field1;
            struct _00219 _field2;
        } _field1;
        int _field2;
        int _field3;
        float _field4;
    } _field1;
    _Bool _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned long long _field6;
    struct _00445 {
        struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> _field1;
    } _field7;
    struct _00206 {
        struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> _field1;
    } _field8;
    struct _00599 _field9;
    struct _00084 {
        struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field1;
        _Bool _field2;
    } _field10;
    struct _00460 _field11;
    int _field12;
    struct _00111 {
        struct _00184 _field1;
        struct _00599 _field2;
    } _field13;
};

struct _00184 {
    int _field1;
    struct _00210 {
        _Bool _field1;
        struct _00367 _field2;
        struct _00367 _field3;
        struct _00599 _field4;
    } _field2;
};

struct _00219 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct _00348 {
    int _field1;
    float _field2;
    float _field3;
};

struct _00367 {
    _Bool _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct _00460 {
    unsigned long long _field1;
    struct _00650 _field2;
    float _field3;
};

struct _00599 {
    struct _00611 {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
        _Bool _field4;
        _Bool _field5;
        _Bool _field6;
        _Bool _field7;
        _Bool _field8;
    } _field1;
    struct _00650 _field2;
    struct _00687 {
        float _field1;
        float _field2;
    } _field3;
    struct _00348 _field4[7];
    struct _00348 _field5[7];
    unsigned long long _field6;
    struct _00671 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field7;
    struct _00614 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field8;
    struct _00621 {
        float _field1;
        float _field2;
        float _field3;
    } _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct _00650 {
    float _field1;
    float _field2;
};

struct _00716;

struct _DetectorConfig {
    double timeout;
    int maxTaskQueueSize;
    int minFaceSize;
    float maxYawAngle;
    float maxPitchAngle;
    float minBrightness;
    float maxBrightness;
    float maxMotionBlurness;
    float maxGaussianBlurness;
    float maxEyeOpen;
    float maxMouthOpen;
    float minIntegrity;
};

struct _FSCRT_APPHANDLER {
    void *clientData;
    CDUnknownFunctionPointerType CallFunction;
    CDUnknownFunctionPointerType OnEvent;
    CDUnknownFunctionPointerType OnOutOfMemory;
    CDUnknownFunctionPointerType OnRecover;
};

struct _FSCRT_BSTR {
    char *_field1;
    unsigned int _field2;
};

struct _FSCRT_DATETIMEZONE {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    short _field9;
    unsigned short _field10;
};

struct _FSCRT_DOCUMENT {
    void *_field1;
};

struct _FSCRT_IMAGE {
    void *_field1;
};

struct _FSCRT_MEMMGRHANDLER {
    void *clientData;
    CDUnknownFunctionPointerType Alloc;
    CDUnknownFunctionPointerType Realloc;
    CDUnknownFunctionPointerType Free;
};

struct _FSCRT_PAGE {
    void *_field1;
};

struct _FSCRT_PATHDATA {
    void *_field1;
};

struct _FSPDF_OBJECT {
    void *_field1;
};

struct _FSPDF_PAGEOBJECTS {
    void *_field1;
};

struct _JMergePoint {
    int _field1;
    int _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> *__next_;
};

struct __list_node_base<const WCTProperty, void *> {
    struct __list_node_base<const WCTProperty, void *> *_field1;
    struct __list_node_base<const WCTProperty, void *> *_field2;
};

struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> {
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> *__prev_;
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> *__next_;
};

struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> {
    struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> *_field1;
    struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> *_field2;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __siginfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    int _field6;
    void *_field7;
    union sigval _field8;
    long long _field9;
    unsigned long long _field10[7];
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __wrap_iter<const gmscore::model::AbsolutePosition *> {
    struct AbsolutePosition *_field1;
};

struct __wrap_iter<const gmscore::model::Alignment *> {
    struct Alignment *_field1;
};

struct __wrap_iter<const gmscore::model::LabelGroup *> {
    struct LabelGroup *_field1;
};

struct __wrap_iter<const gmscore::model::Point2D *> {
    struct Point2D *_field1;
};

struct __wrap_iter<const gmscore::model::Point3D *> {
    struct Point3D *_field1;
};

struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> {
    struct NormalVector *_field1;
};

struct __wrap_iter<const gmscore::vector::ColoredPoint *> {
    struct ColoredPoint *_field1;
};

struct __wrap_iter<const int *> {
    int *_field1;
};

struct __wrap_iter<const unsigned int *> {
    unsigned int *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
};

struct array<gmscore::base::reffed_ptr<gmscore::renderer::StencilState>, 8> {
    reffed_ptr_b6b7b6c6 __elems_[8];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct bitset<16> {
    unsigned long long _field1;
};

struct cJSON;

struct deque<(anonymous namespace)::VelocityItem, std::__1::allocator<(anonymous namespace)::VelocityItem>> {
    struct __split_buffer<(anonymous namespace)::VelocityItem *, std::__1::allocator<(anonymous namespace)::VelocityItem *>> {
        struct VelocityItem **__first_;
        struct VelocityItem **__begin_;
        struct VelocityItem **__end_;
        struct __compressed_pair<(anonymous namespace)::VelocityItem **, std::__1::allocator<(anonymous namespace)::VelocityItem *>> {
            struct VelocityItem **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<(anonymous namespace)::VelocityItem>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>> {
    struct __split_buffer<GMSEntityTapClassStatusSet *, std::__1::allocator<GMSEntityTapClassStatusSet *>> {
        struct GMSEntityTapClassStatusSet **__first_;
        struct GMSEntityTapClassStatusSet **__begin_;
        struct GMSEntityTapClassStatusSet **__end_;
        struct __compressed_pair<GMSEntityTapClassStatusSet **, std::__1::allocator<GMSEntityTapClassStatusSet *>> {
            struct GMSEntityTapClassStatusSet **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<GMSEntityTapClassStatusSet>> {
        unsigned long long __value_;
    } __size_;
};

struct dl_info {
    char *dli_fname;
    void *dli_fbase;
    char *dli_sname;
    void *dli_saddr;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long _field1;
};

struct eproc {
    struct proc *_field1;
    struct session *_field2;
    struct _pcred {
        char _field1[72];
        struct ucred *_field2;
        unsigned int _field3;
        unsigned int _field4;
        unsigned int _field5;
        unsigned int _field6;
        int _field7;
    } _field3;
    struct _ucred {
        int _field1;
        unsigned int _field2;
        short _field3;
        unsigned int _field4[16];
    } _field4;
    struct vmspace _field5;
    int _field6;
    int _field7;
    short _field8;
    int _field9;
    int _field10;
    struct session *_field11;
    char _field12[8];
    int _field13;
    short _field14;
    short _field15;
    short _field16;
    int _field17;
    char _field18[12];
    int _field19[4];
};

struct extern_proc {
    union {
        struct {
            struct proc *_field1;
            struct proc *_field2;
        } _field1;
        struct timeval _field2;
    } _field1;
    struct vmspace *_field2;
    struct sigacts *_field3;
    int _field4;
    char _field5;
    int _field6;
    int _field7;
    int _field8;
    char *_field9;
    void *_field10;
    int _field11;
    int _field12;
    unsigned int _field13;
    int _field14;
    unsigned int _field15;
    void *_field16;
    char *_field17;
    unsigned int _field18;
    unsigned int _field19;
    struct itimerval _field20;
    struct timeval _field21;
    unsigned long long _field22;
    unsigned long long _field23;
    unsigned long long _field24;
    int _field25;
    struct vnode *_field26;
    int _field27;
    struct vnode *_field28;
    int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned char _field33;
    unsigned char _field34;
    char _field35;
    char _field36[17];
    struct pgrp *_field37;
    struct user *_field38;
    unsigned short _field39;
    unsigned short _field40;
    struct rusage *_field41;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct itimerval {
    struct timeval _field1;
    struct timeval _field2;
};

struct kinfo_proc {
    struct extern_proc _field1;
    struct eproc _field2;
};

struct list<gmscore::renderer::ImageDataSignature, std::__1::allocator<gmscore::renderer::ImageDataSignature>> {
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<gmscore::renderer::ImageDataSignature, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>;

struct list<std::__1::shared_ptr<WCTColumnBinding>, std::__1::allocator<std::__1::shared_ptr<WCTColumnBinding>>> {
    struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<WCTColumnBinding>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>>;

struct map<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, std::__1::allocator<std::__1::pair<const GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::__map_value_compare<GMPStyleTableMapping_VersatileMapStyle, std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, true>, std::__1::allocator<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMPStyleTableMapping_VersatileMapStyle, std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>, std::__1::less<GMSFeatureType>, std::__1::allocator<std::__1::pair<const GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> {
    struct __tree<std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::__map_value_compare<GMSFeatureType, std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::less<GMSFeatureType>, true>, std::__1::allocator<std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSFeatureType, std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::less<GMSFeatureType>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<GMSMarker *, GMSMarkerRenderInfo *, std::__1::less<GMSMarker *>, std::__1::allocator<std::__1::pair<GMSMarker *const, GMSMarkerRenderInfo *>>> {
    struct __tree<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::less<GMSMarker *>, true>, std::__1::allocator<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::less<GMSMarker *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSMarker *, long long, std::__1::less<GMSMarker *>, std::__1::allocator<std::__1::pair<GMSMarker *const, long long>>> {
    struct __tree<std::__1::__value_type<GMSMarker *, long long>, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, long long>, std::__1::less<GMSMarker *>, true>, std::__1::allocator<std::__1::__value_type<GMSMarker *, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSMarker *, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, long long>, std::__1::less<GMSMarker *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSOverlay *, GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<std::__1::pair<GMSOverlay *const, GMSOverlay *>>> {
    struct __tree<std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::__map_value_compare<GMSOverlay *, std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::less<GMSOverlay *>, true>, std::__1::allocator<std::__1::__value_type<GMSOverlay *, GMSOverlay *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSOverlay *, GMSOverlay *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSOverlay *, std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::less<GMSOverlay *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSRenderTileProvider *, unsigned int, std::__1::less<GMSRenderTileProvider *>, std::__1::allocator<std::__1::pair<GMSRenderTileProvider *const, unsigned int>>> {
    struct __tree<std::__1::__value_type<GMSRenderTileProvider *, unsigned int>, std::__1::__map_value_compare<GMSRenderTileProvider *, std::__1::__value_type<GMSRenderTileProvider *, unsigned int>, std::__1::less<GMSRenderTileProvider *>, true>, std::__1::allocator<std::__1::__value_type<GMSRenderTileProvider *, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSRenderTileProvider *, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSRenderTileProvider *, std::__1::__value_type<GMSRenderTileProvider *, unsigned int>, std::__1::less<GMSRenderTileProvider *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSStyleType, NSMutableArray<GMSModelStyle *>*, std::__1::less<GMSStyleType>, std::__1::allocator<std::__1::pair<const GMSStyleType, NSMutableArray<GMSModelStyle *>*>>> {
    struct __tree<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::__map_value_compare<GMSStyleType, std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::less<GMSStyleType>, true>, std::__1::allocator<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSStyleType, std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::less<GMSStyleType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSTileLayer *, GMSRenderTileProvider *, std::__1::less<GMSTileLayer *>, std::__1::allocator<std::__1::pair<GMSTileLayer *const, GMSRenderTileProvider *>>> {
    struct __tree<std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>, std::__1::__map_value_compare<GMSTileLayer *, std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>, std::__1::less<GMSTileLayer *>, true>, std::__1::allocator<std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSTileLayer *, std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>, std::__1::less<GMSTileLayer *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<UIView *, GMSOffscreenEntityView *, std::__1::less<UIView *>, std::__1::allocator<std::__1::pair<UIView *const, GMSOffscreenEntityView *>>> {
    struct __tree<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::less<UIView *>, true>, std::__1::allocator<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::less<UIView *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>, std::__1::less<gmscore::renderer::ImageDataSignature>, std::__1::allocator<std::__1::pair<const gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>>> {
    struct __tree<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::__map_value_compare<gmscore::renderer::ImageDataSignature, std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::less<gmscore::renderer::ImageDataSignature>, true>, std::__1::allocator<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gmscore::renderer::ImageDataSignature, std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::less<gmscore::renderer::ImageDataSignature>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, GMSMarker *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMarker *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMarker *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMarker *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMarker *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMarker *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMarker *>, std::__1::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, GMSMultiZoomStyle *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMultiZoomStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>, WCDB::CaseInsensiveComparetor, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, WCDB::CaseInsensiveComparetor, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, WCDB::CaseInsensiveComparetor, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int>>, std::__1::allocator<std::__1::pair<const std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>>> {
    struct __tree<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>, std::__1::__map_value_compare<std::__1::tuple<gmscore::model::StyleID, int>, std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::tuple<gmscore::model::StyleID, int>, std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, (anonymous namespace)::PooledTextureState, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, (anonymous namespace)::PooledTextureState>>> {
    struct __tree<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>>> {
    struct __tree<std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, id<GMSTileService>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<GMSTileService>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, id<GMSTileService>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<GMSTileService>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, id<GMSTileService>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, id<GMSTileService>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<GMSTileService>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, int, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> {
    struct __tree<std::__1::__value_type<unsigned long long, int>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, int>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, int>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, GMSOverlay *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, GMSOverlay *>>> {
    struct __tree<std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, GMSOverlay *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, GMSOverlay *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multiset<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> {
    struct __tree<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<GMSFeature>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct objc_metadata_hider_ptr<gmscore::renderer::EntityRenderer> {
    struct EntityRenderer *p_;
};

struct objc_metadata_hider_ptr<gmscore::vector::TextureCache> {
    struct TextureCache *_field1;
};

struct pgrp;

struct proc;

struct reffed_ptr<(anonymous namespace)::BubbleBehavior> {
    struct BubbleBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::ColoredOverlayBehavior> {
    struct ColoredOverlayBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::IndoorTileAnimationBehavior> {
    struct IndoorTileAnimationBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::LabelingUpdateListener> {
    struct LabelingUpdateListener *ptr_;
};

struct reffed_ptr<(anonymous namespace)::PointsBehavior> {
    struct PointsBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::StickerBehavior> {
    struct StickerBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::TileUpdaterBehavior> {
    struct TileUpdaterBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::UpdateMyLocationBehaviorInternal> {
    struct UpdateMyLocationBehaviorInternal *ptr_;
};

struct reffed_ptr<gmscore::renderer::AdjustableTextureShaderState> {
    struct AdjustableTextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::BaseEntity> {
    struct BaseEntity *ptr_;
};

struct reffed_ptr<gmscore::renderer::Behavior> {
    struct Behavior *_field1;
};

struct reffed_ptr<gmscore::renderer::BlendState> {
    struct BlendState *ptr_;
};

struct reffed_ptr<gmscore::renderer::ColorMaskState> {
    struct ColorMaskState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DefaultAlphaShaderState> {
    struct DefaultAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DefaultShaderState> {
    struct DefaultShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DepthBufferState> {
    struct DepthBufferState *ptr_;
};

struct reffed_ptr<gmscore::renderer::EntityState> {
    struct EntityState *ptr_;
};

struct reffed_ptr<gmscore::renderer::ImageData> {
    struct ImageData *ptr_;
};

struct reffed_ptr<gmscore::renderer::LineState> {
    struct LineState *ptr_;
};

struct reffed_ptr<gmscore::renderer::PolygonState>;

struct reffed_ptr<gmscore::renderer::RenderTarget> {
    struct RenderTarget *ptr_;
};

struct reffed_ptr<gmscore::renderer::StencilState> {
    struct StencilState *ptr_;
};

struct reffed_ptr<gmscore::renderer::TextureShaderState> {
    struct TextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::TextureState> {
    struct TextureState *ptr_;
};

struct reffed_ptr<gmscore::renderer::VertexData> {
    struct VertexData *ptr_;
};

struct reffed_ptr<gmscore::renderer::ios::BlockBasedBehavior> {
    struct BlockBasedBehavior *ptr_;
};

struct reffed_ptr<gmscore::streetview::Camera> {
    struct Camera *_field1;
};

struct reffed_ptr<gmscore::vector::AreaGroup> {
    struct AreaGroup *ptr_;
};

struct reffed_ptr<gmscore::vector::BuildingGroupFadeBehavior> {
    struct BuildingGroupFadeBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::CalloutStrategy> {
    struct CalloutStrategy *ptr_;
};

struct reffed_ptr<gmscore::vector::Camera> {
    struct Camera *ptr_;
};

struct reffed_ptr<gmscore::vector::ClientVectorOpsBehavior> {
    struct ClientVectorOpsBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::FeatureGroup>;

struct reffed_ptr<gmscore::vector::GLAlphaOnlyTextureShaderState> {
    struct GLAlphaOnlyTextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLAlphaShaderState> {
    struct GLAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBasicShaderState> {
    struct GLBasicShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingFadingAlphaShaderState> {
    struct GLBuildingFadingAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingFadingShaderState> {
    struct GLBuildingFadingShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLLabel> {
    struct GLLabel *ptr_;
};

struct reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas> {
    struct GMSGeneratedTextureAtlas *_field1;
};

struct reffed_ptr<gmscore::vector::GMSMarkupBehavior> {
    struct GMSMarkupBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::GMSStippleTexturePool> {
    struct GMSStippleTexturePool *ptr_;
};

struct reffed_ptr<gmscore::vector::IconTextureCache> {
    struct IconTextureCache *_field1;
};

struct reffed_ptr<gmscore::vector::LabelBucketRestriction> {
    struct LabelBucketRestriction *_field1;
};

struct reffed_ptr<gmscore::vector::LabelDedupingRule> {
    struct LabelDedupingRule *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelProvider> {
    struct LabelProvider *_field1;
};

struct reffed_ptr<gmscore::vector::LabelSource> {
    struct LabelSource *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelUpdateDelegate> {
    struct LabelUpdateDelegate *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelableFeature> {
    struct LabelableFeature *_field1;
};

struct reffed_ptr<gmscore::vector::LabelableFeatureSelector> {
    struct LabelableFeatureSelector *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior::LabelSnapshot> {
    struct LabelSnapshot *_field1;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior::Listener> {
    struct Listener *_field1;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior> {
    struct LabelingBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<bool>> {
    struct ModelRendererValue<bool> *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<float>> {
    struct ModelRendererValue<float> *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<unsigned int>> {
    struct ModelRendererValue<unsigned int> *ptr_;
};

struct reffed_ptr<gmscore::vector::MutableState> {
    struct MutableState *ptr_;
};

struct reffed_ptr<gmscore::vector::MyLocationIndicator> {
    struct MyLocationIndicator *_field1;
};

struct reffed_ptr<gmscore::vector::TextureAtlasesContext> {
    struct TextureAtlasesContext *ptr_;
};

struct reffed_ptr<gmscore::vector::TileLabelProvider> {
    struct TileLabelProvider *ptr_;
};

struct rusage;

struct session;

struct set<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
    struct __tree<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureEntityUIItem *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, (anonymous namespace)::TappableItemSetOrdering> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<GMSFeatureID, gmscore::model::GMSFeatureIDLessFunc, std::__1::allocator<GMSFeatureID>> {
    struct __tree<GMSFeatureID, gmscore::model::GMSFeatureIDLessFunc, std::__1::allocator<GMSFeatureID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, gmscore::model::GMSFeatureIDLessFunc> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<GMSOverlay *>> {
    struct __tree<GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<GMSOverlay *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSOverlay *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<GMSOverlay *>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
    struct __tree<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UIView *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UIView *>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
    struct __tree<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::IndoorID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::IndoorID>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> {
    struct __tree<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<GMSEntityTappableUIItem>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, gmscore::vector::TappableMapItemQueue::TappableItemsCompare> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __tree<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned short, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned short>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<GMSRocketIconService::Holder> {
    struct Holder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCTColumnBinding> {
    struct WCTColumnBinding *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<gmscore::vector::CalloutSharedState> {
    struct CalloutSharedState *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>> {
    struct list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>>> {
    struct list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>>> {
    struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>>> {
    struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct sigaction {
    union __sigaction_u {
        CDUnknownFunctionPointerType __sa_handler;
        CDUnknownFunctionPointerType __sa_sigaction;
    } __sigaction_u;
    unsigned int sa_mask;
    int sa_flags;
};

struct sigacts;

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct stack<GMSEntityTapClassStatusSet, std::__1::deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>>> {
    struct deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>> c;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> _field1;
};

struct timeval {
    long long _field1;
    int _field2;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tuple<int, int, unsigned int> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2>, int, int, unsigned int> {
        int __value_;
        int __value_;
        unsigned int __value_;
    } __base_;
};

struct ucred;

struct unique_ptr<(anonymous namespace)::ViewRenderTargetChangedSizeListener, std::__1::default_delete<(anonymous namespace)::ViewRenderTargetChangedSizeListener>> {
    struct __compressed_pair<(anonymous namespace)::ViewRenderTargetChangedSizeListener *, std::__1::default_delete<(anonymous namespace)::ViewRenderTargetChangedSizeListener>> {
        struct ViewRenderTargetChangedSizeListener *__value_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::IconRenderer, std::__1::default_delete<GMSx_gmm_photo::api::IconRenderer>> {
    struct __compressed_pair<GMSx_gmm_photo::api::IconRenderer *, std::__1::default_delete<GMSx_gmm_photo::api::IconRenderer>> {
        struct IconRenderer *__value_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::Renderer, std::__1::default_delete<GMSx_gmm_photo::api::Renderer>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Renderer *, std::__1::default_delete<GMSx_gmm_photo::api::Renderer>> {
        struct Renderer *__value_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::SchedulingService, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> {
    struct __compressed_pair<GMSx_gmm_photo::api::SchedulingService *, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> {
        struct SchedulingService *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> {
        struct Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::platform_ios::IOSPlatformContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IOSPlatformContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
        struct IOSPlatformContext *__value_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::platform_ios::IVIOSGLContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IVIOSGLContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IVIOSGLContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IVIOSGLContext>> {
        struct IVIOSGLContext *__value_;
    } __ptr_;
};

struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> {
    struct __compressed_pair<_00509::_00206::_00716 *, std::__1::default_delete<_00509::_00206::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> {
    struct __compressed_pair<_00509::_00445::_00716 *, std::__1::default_delete<_00509::_00445::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<gmscore::dash::CookieStore, std::__1::default_delete<gmscore::dash::CookieStore>> {
    struct __compressed_pair<gmscore::dash::CookieStore *, std::__1::default_delete<gmscore::dash::CookieStore>> {
        struct CookieStore *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::model::CollidableSet2D, std::__1::default_delete<gmscore::model::CollidableSet2D>> {
    struct __compressed_pair<gmscore::model::CollidableSet2D *, std::__1::default_delete<gmscore::model::CollidableSet2D>> {
        struct CollidableSet2D *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::EntityRenderer, std::__1::default_delete<gmscore::renderer::EntityRenderer>> {
    struct __compressed_pair<gmscore::renderer::EntityRenderer *, std::__1::default_delete<gmscore::renderer::EntityRenderer>> {
        struct EntityRenderer *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::ResourceFinder, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
    struct __compressed_pair<gmscore::renderer::ResourceFinder *, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
        struct ResourceFinder *_field1;
    } _field1;
};

struct unique_ptr<gmscore::renderer::Time, std::__1::default_delete<gmscore::renderer::Time>> {
    struct __compressed_pair<gmscore::renderer::Time *, std::__1::default_delete<gmscore::renderer::Time>> {
        struct Time *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::ios::IOSGLState, std::__1::default_delete<gmscore::renderer::ios::IOSGLState>> {
    struct __compressed_pair<gmscore::renderer::ios::IOSGLState *, std::__1::default_delete<gmscore::renderer::ios::IOSGLState>> {
        struct IOSGLState *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmscore::model::GMSFeatureIDHashFunc, gmscore::model::GMSFeatureIDEqualFunc, false>, std::__1::default_delete<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmscore::model::GMSFeatureIDHashFunc, gmscore::model::GMSFeatureIDEqualFunc, false>>> {
    struct __compressed_pair<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmscore::model::GMSFeatureIDHashFunc, gmscore::model::GMSFeatureIDEqualFunc, false>*, std::__1::default_delete<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmscore::model::GMSFeatureIDHashFunc, gmscore::model::GMSFeatureIDEqualFunc, false>>> {
        struct LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmscore::model::GMSFeatureIDHashFunc, gmscore::model::GMSFeatureIDEqualFunc, false> *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>, std::__1::default_delete<gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>>> {
    struct __compressed_pair<gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>*, std::__1::default_delete<gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>>> {
        struct LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false> *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>, std::__1::default_delete<gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>>> {
    struct __compressed_pair<gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>*, std::__1::default_delete<gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false>>> {
        struct LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, false> *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::MutableStateTracker, std::__1::default_delete<gmscore::vector::MutableStateTracker>> {
    struct __compressed_pair<gmscore::vector::MutableStateTracker *, std::__1::default_delete<gmscore::vector::MutableStateTracker>> {
        struct MutableStateTracker *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::TextureCache, std::__1::default_delete<gmscore::vector::TextureCache>> {
    struct __compressed_pair<gmscore::vector::TextureCache *, std::__1::default_delete<gmscore::vector::TextureCache>> {
        struct TextureCache *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::detail::FeatureData, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
    struct __compressed_pair<gmscore::vector::detail::FeatureData *, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
        struct FeatureData *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<GMSFeatureID, GMSIndoorBuildingState *, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, std::__1::allocator<std::__1::pair<const GMSFeatureID, GMSIndoorBuildingState *>>> {
    struct __hash_table<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, std::__1::__unordered_map_hasher<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, gmsbase::model::GMSIndoorIDHashFunc, true>, std::__1::__unordered_map_equal<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, gmsbase::model::GMSIndoorIDEqualFunc, true>, std::__1::allocator<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, gmsbase::model::GMSIndoorIDHashFunc, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, gmsbase::model::GMSIndoorIDEqualFunc, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::hash<gmscore::model::IndoorID>, true>, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::equal_to<gmscore::model::IndoorID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::hash<gmscore::model::IndoorID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::equal_to<gmscore::model::IndoorID>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<int, unsigned long long>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>>;

struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>>;

struct unordered_map<unsigned long long, unsigned long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct user;

struct vector<(anonymous namespace)::StringTableEntry, std::__1::allocator<(anonymous namespace)::StringTableEntry>> {
    struct StringTableEntry *__begin_;
    struct StringTableEntry *__end_;
    struct __compressed_pair<(anonymous namespace)::StringTableEntry *, std::__1::allocator<(anonymous namespace)::StringTableEntry>> {
        struct StringTableEntry *__value_;
    } __end_cap_;
};

struct vector<AMapPBEncodeItem, std::__1::allocator<AMapPBEncodeItem>> {
    struct AMapPBEncodeItem *_field1;
    struct AMapPBEncodeItem *_field2;
    struct __compressed_pair<AMapPBEncodeItem *, std::__1::allocator<AMapPBEncodeItem>> {
        struct AMapPBEncodeItem *_field1;
    } _field3;
};

struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__value_;
    } __end_cap_;
};

struct vector<GMSCoordinate, std::__1::allocator<GMSCoordinate>> {
    struct GMSCoordinate *_field1;
    struct GMSCoordinate *_field2;
    struct __compressed_pair<GMSCoordinate *, std::__1::allocator<GMSCoordinate>> {
        struct GMSCoordinate *_field1;
    } _field3;
};

struct vector<GMSFeatureID, std::__1::allocator<GMSFeatureID>> {
    struct GMSFeatureID *__begin_;
    struct GMSFeatureID *__end_;
    struct __compressed_pair<GMSFeatureID *, std::__1::allocator<GMSFeatureID>> {
        struct GMSFeatureID *__value_;
    } __end_cap_;
};

struct vector<GMSLazyMultiZoomStyle, std::__1::allocator<GMSLazyMultiZoomStyle>> {
    struct GMSLazyMultiZoomStyle *__begin_;
    struct GMSLazyMultiZoomStyle *__end_;
    struct __compressed_pair<GMSLazyMultiZoomStyle *, std::__1::allocator<GMSLazyMultiZoomStyle>> {
        struct GMSLazyMultiZoomStyle *__value_;
    } __end_cap_;
};

struct vector<GMSOffscreenEntityView *, std::__1::allocator<GMSOffscreenEntityView *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<GMSOffscreenEntityView *__strong *, std::__1::allocator<GMSOffscreenEntityView *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> {
    struct TileTemplate *__begin_;
    struct TileTemplate *__end_;
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate *, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> {
        struct TileTemplate *__value_;
    } __end_cap_;
};

struct vector<TrackedFaceInfo, std::__1::allocator<TrackedFaceInfo>> {
    struct TrackedFaceInfo *_field1;
    struct TrackedFaceInfo *_field2;
    struct __compressed_pair<TrackedFaceInfo *, std::__1::allocator<TrackedFaceInfo>> {
        struct TrackedFaceInfo *_field1;
    } _field3;
};

struct vector<const gmscore::vector::MarkupPolyline, std::__1::allocator<const gmscore::vector::MarkupPolyline>> {
    struct MarkupPolyline *_field1;
    struct MarkupPolyline *_field2;
    struct __compressed_pair<const gmscore::vector::MarkupPolyline *, std::__1::allocator<const gmscore::vector::MarkupPolyline>> {
        struct MarkupPolyline *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
    struct reffed_ptr<gmscore::renderer::PolygonState> *__begin_;
    struct reffed_ptr<gmscore::renderer::PolygonState> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
        struct reffed_ptr<gmscore::renderer::PolygonState> *__value_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>>> {
    struct reffed_ptr<gmscore::vector::FeatureGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::FeatureGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>>> {
        struct reffed_ptr<gmscore::vector::FeatureGroup> *__value_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    reffed_ptr_3c29ede8 *_field1;
    reffed_ptr_3c29ede8 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        reffed_ptr_3c29ede8 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>;

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
    reffed_ptr_eca42765 *_field1;
    reffed_ptr_eca42765 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
        reffed_ptr_eca42765 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> {
    reffed_ptr_799bd618 *_field1;
    reffed_ptr_799bd618 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> {
        reffed_ptr_799bd618 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
    reffed_ptr_a24f2af8 *__begin_;
    reffed_ptr_a24f2af8 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
        reffed_ptr_a24f2af8 *__value_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::MutableState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
    reffed_ptr_57016b98 *_field1;
    reffed_ptr_57016b98 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MutableState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
        reffed_ptr_57016b98 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::MyLocationIndicator>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MyLocationIndicator>>> {
    reffed_ptr_c6b907f4 *__begin_;
    reffed_ptr_c6b907f4 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MyLocationIndicator>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MyLocationIndicator>>> {
        reffed_ptr_c6b907f4 *__value_;
    } __end_cap_;
};

struct vector<gmscore::math::Vector2f, std::__1::allocator<gmscore::math::Vector2f>> {
    struct Vector2f *__begin_;
    struct Vector2f *__end_;
    struct __compressed_pair<gmscore::math::Vector2f *, std::__1::allocator<gmscore::math::Vector2f>> {
        struct Vector2f *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>> {
    struct AbsolutePosition *__begin_;
    struct AbsolutePosition *__end_;
    struct __compressed_pair<gmscore::model::AbsolutePosition *, std::__1::allocator<gmscore::model::AbsolutePosition>> {
        struct AbsolutePosition *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>> {
    struct Alignment *__begin_;
    struct Alignment *__end_;
    struct __compressed_pair<gmscore::model::Alignment *, std::__1::allocator<gmscore::model::Alignment>> {
        struct Alignment *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::LabelElement, std::__1::allocator<gmscore::model::LabelElement>> {
    struct LabelElement *__begin_;
    struct LabelElement *__end_;
    struct __compressed_pair<gmscore::model::LabelElement *, std::__1::allocator<gmscore::model::LabelElement>> {
        struct LabelElement *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>> {
    struct LabelGroup *__begin_;
    struct LabelGroup *__end_;
    struct __compressed_pair<gmscore::model::LabelGroup *, std::__1::allocator<gmscore::model::LabelGroup>> {
        struct LabelGroup *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>> {
    struct Point2D *__begin_;
    struct Point2D *__end_;
    struct __compressed_pair<gmscore::model::Point2D *, std::__1::allocator<gmscore::model::Point2D>> {
        struct Point2D *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>> {
    struct Point3D *__begin_;
    struct Point3D *__end_;
    struct __compressed_pair<gmscore::model::Point3D *, std::__1::allocator<gmscore::model::Point3D>> {
        struct Point3D *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Rectangle2D, std::__1::allocator<gmscore::model::Rectangle2D>> {
    struct Rectangle2D *__begin_;
    struct Rectangle2D *__end_;
    struct __compressed_pair<gmscore::model::Rectangle2D *, std::__1::allocator<gmscore::model::Rectangle2D>> {
        struct Rectangle2D *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>> {
    struct Stroke *__begin_;
    struct Stroke *__end_;
    struct __compressed_pair<gmscore::model::Stroke *, std::__1::allocator<gmscore::model::Stroke>> {
        struct Stroke *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Triangle2D, std::__1::allocator<gmscore::model::Triangle2D>> {
    struct Triangle2D *__begin_;
    struct Triangle2D *__end_;
    struct __compressed_pair<gmscore::model::Triangle2D *, std::__1::allocator<gmscore::model::Triangle2D>> {
        struct Triangle2D *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
    struct NormalVector *__begin_;
    struct NormalVector *__end_;
    struct __compressed_pair<gmscore::model::stripified_mesh::NormalVector *, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
        struct NormalVector *__value_;
    } __end_cap_;
};

struct vector<gmscore::renderer::RenderBin *, std::__1::allocator<gmscore::renderer::RenderBin *>> {
    struct RenderBin **_field1;
    struct RenderBin **_field2;
    struct __compressed_pair<gmscore::renderer::RenderBin **, std::__1::allocator<gmscore::renderer::RenderBin *>> {
        struct RenderBin **_field1;
    } _field3;
};

struct vector<gmscore::vector::ColorSpan, std::__1::allocator<gmscore::vector::ColorSpan>> {
    struct ColorSpan *__begin_;
    struct ColorSpan *__end_;
    struct __compressed_pair<gmscore::vector::ColorSpan *, std::__1::allocator<gmscore::vector::ColorSpan>> {
        struct ColorSpan *__value_;
    } __end_cap_;
};

struct vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>> {
    struct ColoredPoint *__begin_;
    struct ColoredPoint *__end_;
    struct __compressed_pair<gmscore::vector::ColoredPoint *, std::__1::allocator<gmscore::vector::ColoredPoint>> {
        struct ColoredPoint *__value_;
    } __end_cap_;
};

struct vector<gmscore::vector::MutableStateTracker *, std::__1::allocator<gmscore::vector::MutableStateTracker *>> {
    struct MutableStateTracker **__begin_;
    struct MutableStateTracker **__end_;
    struct __compressed_pair<gmscore::vector::MutableStateTracker **, std::__1::allocator<gmscore::vector::MutableStateTracker *>> {
        struct MutableStateTracker **__value_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<short, std::__1::allocator<short>> {
    short *__begin_;
    short *__end_;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *__value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *_field1;
    basic_string_90719d97 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>>> {
    vector_47b6fe56 *__begin_;
    vector_47b6fe56 *__end_;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>>> {
        vector_47b6fe56 *__value_;
    } __end_cap_;
};

struct vector<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
    vector_52d06928 *_field1;
    vector_52d06928 *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>*, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
        vector_52d06928 *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
};

struct vm_statistics {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
};

struct vmspace {
    int _field1;
    char *_field2;
    int _field3[5];
    char *_field4[3];
};

struct vnode;

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int x;
    unsigned int y;
    unsigned int width;
    unsigned int height;
} CDStruct_0a4f9365;

typedef struct {
    unsigned int x;
    unsigned int y;
    short zoom;
} CDStruct_c8e85508;

typedef struct {
    unsigned int _field1;
    unsigned short _field2;
    unsigned int _field3;
} CDStruct_91b80c38;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    int _field1;
    int _field2;
    void *_field3;
} CDStruct_da23731b;

typedef struct {
    int left;
    int top;
    int right;
    int bottom;
} CDStruct_51449276;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long row;
    long long cloumn;
} CDStruct_8dff4cb4;

typedef struct CDStruct_183601bc;

typedef struct {
    CDStruct_183601bc *_field1;
    int _field2;
} CDStruct_af61540b;

typedef struct {
    float low_quality;
    float in_bound;
    float is_idcard;
    _Bool has_shadow;
    int shadow_count;
    _Bool has_specular_highlight;
    int specular_highlight_count;
    struct CGPoint corner_points[4];
    struct CGPoint portrait_points[4];
    float angles[3];
    unsigned long long side;
    float brightness;
    unsigned long long idcard_type;
    _Bool legality;
} CDStruct_46efb013;

typedef struct {
    CDStruct_51449276 _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    int _field9;
    int _field10;
    int _field11;
} CDStruct_31865034;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct CLLocationCoordinate2D _field2;
    struct CLLocationCoordinate2D _field3;
    struct CLLocationCoordinate2D _field4;
} CDStruct_165487e6;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    _Bool has_face;
    float yaw;
    float pitch;
    float blurness_motion;
    float blurness_gaussian;
    struct CGRect face_rect;
    struct CGPoint face_landmarks[7];
    float eye_left_hwratio;
    float eye_right_hwratio;
    float mouth_hwratio;
    float glasses;
    float brightness;
    float integrity;
    int frame_type;
    _Bool not_video;
    float smooth_yaw;
    float smooth_pitch;
    float eye_left_det;
    float eye_right_det;
    float mouth_det;
    float eye_left_occlusion;
    float eye_right_occlusion;
    float mouth_occlusion;
    _Bool eye_blink;
    _Bool mouth_open;
    _Bool pitch3d;
    float quality;
    float smooth_quality;
    _Bool face_too_large;
} CDStruct_e441acf7;

// Template types
typedef struct STLRange<const std::__1::vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>>> {
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field1;
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field2;
} STLRange_5fcae3ea;

typedef struct STLRange<const std::__1::vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>>> {
    struct __wrap_iter<const gmscore::model::Alignment *> _field1;
    struct __wrap_iter<const gmscore::model::Alignment *> _field2;
} STLRange_34380436;

typedef struct STLRange<const std::__1::vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>>> {
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field1;
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field2;
} STLRange_9ddfc5e7;

typedef struct STLRange<const std::__1::vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>>> {
    struct __wrap_iter<const gmscore::model::Point3D *> _field1;
    struct __wrap_iter<const gmscore::model::Point3D *> _field2;
} STLRange_4dbe973e;

typedef struct STLRange<const std::__1::vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>>> {
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field1;
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field2;
} STLRange_5078e726;

typedef struct STLRange<const std::__1::vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>>> {
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field1;
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field2;
} STLRange_20c09f2e;

typedef struct STLRange<const std::__1::vector<int, std::__1::allocator<int>>> {
    struct __wrap_iter<const int *> _field1;
    struct __wrap_iter<const int *> _field2;
} STLRange_9491c893;

typedef struct STLRange<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>> {
    struct __wrap_iter<const unsigned int *> _field1;
    struct __wrap_iter<const unsigned int *> _field2;
} STLRange_c62eef92;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct bitset<16> {
    unsigned long long _field1;
} bitset_5aefb80d;

typedef struct map<long long, GMSMultiZoomStyle *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMultiZoomStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_f929ff81;

typedef struct objc_metadata_hider_ptr<gmscore::renderer::EntityRenderer> {
    struct EntityRenderer *p_;
} objc_metadata_hider_ptr_a1c2b231;

typedef struct objc_metadata_hider_ptr<gmscore::vector::TextureCache> {
    struct TextureCache *_field1;
} objc_metadata_hider_ptr_ab527736;

typedef struct reffed_ptr<(anonymous namespace)::TileUpdaterBehavior> {
    struct TileUpdaterBehavior *ptr_;
} reffed_ptr_9b434489;

typedef struct reffed_ptr<gmscore::renderer::AdjustableTextureShaderState> {
    struct AdjustableTextureShaderState *ptr_;
} reffed_ptr_737cd738;

typedef struct reffed_ptr<gmscore::renderer::BaseEntity> {
    struct BaseEntity *ptr_;
} reffed_ptr_757df3c3;

typedef struct reffed_ptr<gmscore::renderer::Behavior> {
    struct Behavior *_field1;
} reffed_ptr_d6c13506;

typedef struct reffed_ptr<gmscore::renderer::BlendState> {
    struct BlendState *ptr_;
} reffed_ptr_9dddd61a;

typedef struct reffed_ptr<gmscore::renderer::ColorMaskState> {
    struct ColorMaskState *ptr_;
} reffed_ptr_5b7b7427;

typedef struct reffed_ptr<gmscore::renderer::DefaultAlphaShaderState> {
    struct DefaultAlphaShaderState *ptr_;
} reffed_ptr_23a2d03e;

typedef struct reffed_ptr<gmscore::renderer::DefaultShaderState> {
    struct DefaultShaderState *ptr_;
} reffed_ptr_36a6b36a;

typedef struct reffed_ptr<gmscore::renderer::DepthBufferState> {
    struct DepthBufferState *ptr_;
} reffed_ptr_4c2746c7;

typedef struct reffed_ptr<gmscore::renderer::EntityState> {
    struct EntityState *ptr_;
} reffed_ptr_c8344b08;

typedef struct reffed_ptr<gmscore::renderer::ImageData> {
    struct ImageData *ptr_;
} reffed_ptr_5e8a2241;

typedef struct reffed_ptr<gmscore::renderer::LineState> {
    struct LineState *ptr_;
} reffed_ptr_08be8c30;

typedef struct reffed_ptr<gmscore::renderer::RenderTarget> {
    struct RenderTarget *ptr_;
} reffed_ptr_e23c8d60;

typedef struct reffed_ptr<gmscore::renderer::StencilState> {
    struct StencilState *ptr_;
} reffed_ptr_b6b7b6c6;

typedef struct reffed_ptr<gmscore::renderer::TextureShaderState> {
    struct TextureShaderState *ptr_;
} reffed_ptr_54a4db53;

typedef struct reffed_ptr<gmscore::renderer::TextureState> {
    struct TextureState *ptr_;
} reffed_ptr_7371fe81;

typedef struct reffed_ptr<gmscore::renderer::VertexData> {
    struct VertexData *ptr_;
} reffed_ptr_6df9c1dc;

typedef struct reffed_ptr<gmscore::streetview::Camera> {
    struct Camera *_field1;
} reffed_ptr_a9a59d6a;

typedef struct reffed_ptr<gmscore::vector::AreaGroup> {
    struct AreaGroup *ptr_;
} reffed_ptr_d682b345;

typedef struct reffed_ptr<gmscore::vector::CalloutStrategy> {
    struct CalloutStrategy *ptr_;
} reffed_ptr_33d7f2af;

typedef struct reffed_ptr<gmscore::vector::Camera> {
    struct Camera *ptr_;
} reffed_ptr_329922e5;

typedef struct reffed_ptr<gmscore::vector::GLAlphaOnlyTextureShaderState> {
    struct GLAlphaOnlyTextureShaderState *ptr_;
} reffed_ptr_331440ca;

typedef struct reffed_ptr<gmscore::vector::GLAlphaShaderState> {
    struct GLAlphaShaderState *ptr_;
} reffed_ptr_33eccd4f;

typedef struct reffed_ptr<gmscore::vector::GLBasicShaderState> {
    struct GLBasicShaderState *ptr_;
} reffed_ptr_e65f5ec8;

typedef struct reffed_ptr<gmscore::vector::GLBuildingFadingAlphaShaderState> {
    struct GLBuildingFadingAlphaShaderState *ptr_;
} reffed_ptr_ee68e0a3;

typedef struct reffed_ptr<gmscore::vector::GLBuildingFadingShaderState> {
    struct GLBuildingFadingShaderState *ptr_;
} reffed_ptr_4233df6d;

typedef struct reffed_ptr<gmscore::vector::GLLabel> {
    struct GLLabel *ptr_;
} reffed_ptr_3c29ede8;

typedef struct reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas> {
    struct GMSGeneratedTextureAtlas *_field1;
} reffed_ptr_eca42765;

typedef struct reffed_ptr<gmscore::vector::GMSMarkupBehavior> {
    struct GMSMarkupBehavior *ptr_;
} reffed_ptr_913e2e02;

typedef struct reffed_ptr<gmscore::vector::GMSStippleTexturePool> {
    struct GMSStippleTexturePool *ptr_;
} reffed_ptr_484c2754;

typedef struct reffed_ptr<gmscore::vector::LabelBucketRestriction> {
    struct LabelBucketRestriction *_field1;
} reffed_ptr_63fdb79c;

typedef struct reffed_ptr<gmscore::vector::LabelDedupingRule> {
    struct LabelDedupingRule *ptr_;
} reffed_ptr_e654501b;

typedef struct reffed_ptr<gmscore::vector::LabelProvider> {
    struct LabelProvider *_field1;
} reffed_ptr_03f800df;

typedef struct reffed_ptr<gmscore::vector::LabelSource> {
    struct LabelSource *ptr_;
} reffed_ptr_799bd618;

typedef struct reffed_ptr<gmscore::vector::LabelUpdateDelegate> {
    struct LabelUpdateDelegate *ptr_;
} reffed_ptr_64032976;

typedef struct reffed_ptr<gmscore::vector::LabelableFeature> {
    struct LabelableFeature *_field1;
} reffed_ptr_a24f2af8;

typedef struct reffed_ptr<gmscore::vector::LabelableFeatureSelector> {
    struct LabelableFeatureSelector *ptr_;
} reffed_ptr_d5e81332;

typedef struct reffed_ptr<gmscore::vector::LabelingBehavior::LabelSnapshot> {
    struct LabelSnapshot *_field1;
} reffed_ptr_fe03a69a;

typedef struct reffed_ptr<gmscore::vector::LabelingBehavior::Listener> {
    struct Listener *_field1;
} reffed_ptr_1c161f82;

typedef struct reffed_ptr<gmscore::vector::MutableState> {
    struct MutableState *ptr_;
} reffed_ptr_57016b98;

typedef struct reffed_ptr<gmscore::vector::MyLocationIndicator> {
    struct MyLocationIndicator *_field1;
} reffed_ptr_c6b907f4;

typedef struct reffed_ptr<gmscore::vector::TextureAtlasesContext> {
    struct TextureAtlasesContext *ptr_;
} reffed_ptr_933c1cb6;

typedef struct set<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
    struct __tree<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureEntityUIItem *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, (anonymous namespace)::TappableItemSetOrdering> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_2c07e213;

typedef struct set<GMSFeatureID, gmscore::model::GMSFeatureIDLessFunc, std::__1::allocator<GMSFeatureID>> {
    struct __tree<GMSFeatureID, gmscore::model::GMSFeatureIDLessFunc, std::__1::allocator<GMSFeatureID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, gmscore::model::GMSFeatureIDLessFunc> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_bc6c840c;

typedef struct set<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
    struct __tree<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UIView *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UIView *>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_54585b72;

typedef struct set<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_99ab198b;

typedef struct set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
    struct __tree<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::IndoorID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::IndoorID>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_3c2611ca;

typedef struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_7b7d70f4;

typedef struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_b4d22a2d;

typedef struct shared_ptr<GMSRocketIconService::Holder> {
    struct Holder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f23710bc;

typedef struct shared_ptr<gmscore::vector::CalloutSharedState> {
    struct CalloutSharedState *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a67c817a;

typedef struct unique_ptr<GMSx_gmm_photo::platform_ios::IOSPlatformContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IOSPlatformContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
        struct IOSPlatformContext *__value_;
    } __ptr_;
} unique_ptr_4729c435;

typedef struct unique_ptr<gmscore::renderer::ResourceFinder, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
    struct __compressed_pair<gmscore::renderer::ResourceFinder *, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
        struct ResourceFinder *_field1;
    } _field1;
} unique_ptr_c2a19896;

typedef struct unique_ptr<gmscore::vector::detail::FeatureData, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
    struct __compressed_pair<gmscore::vector::detail::FeatureData *, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
        struct FeatureData *__value_;
    } __ptr_;
} unique_ptr_037ffa1e;

typedef struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__value_;
    } __end_cap_;
} vector_896d67e1;

typedef struct vector<GMSCoordinate, std::__1::allocator<GMSCoordinate>> {
    struct GMSCoordinate *_field1;
    struct GMSCoordinate *_field2;
    struct __compressed_pair<GMSCoordinate *, std::__1::allocator<GMSCoordinate>> {
        struct GMSCoordinate *_field1;
    } _field3;
} vector_04a19197;

typedef struct vector<GMSFeatureID, std::__1::allocator<GMSFeatureID>> {
    struct GMSFeatureID *__begin_;
    struct GMSFeatureID *__end_;
    struct __compressed_pair<GMSFeatureID *, std::__1::allocator<GMSFeatureID>> {
        struct GMSFeatureID *__value_;
    } __end_cap_;
} vector_cdd17bd2;

typedef struct vector<const gmscore::vector::MarkupPolyline, std::__1::allocator<const gmscore::vector::MarkupPolyline>> {
    struct MarkupPolyline *_field1;
    struct MarkupPolyline *_field2;
    struct __compressed_pair<const gmscore::vector::MarkupPolyline *, std::__1::allocator<const gmscore::vector::MarkupPolyline>> {
        struct MarkupPolyline *_field1;
    } _field3;
} vector_78334dae;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
} vector_b67dfe3a;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
    struct reffed_ptr<gmscore::renderer::PolygonState> *__begin_;
    struct reffed_ptr<gmscore::renderer::PolygonState> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
        struct reffed_ptr<gmscore::renderer::PolygonState> *__value_;
    } __end_cap_;
} vector_69d5a305;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>>> {
    struct reffed_ptr<gmscore::vector::FeatureGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::FeatureGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>>> {
        struct reffed_ptr<gmscore::vector::FeatureGroup> *__value_;
    } __end_cap_;
} vector_0c816959;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    reffed_ptr_3c29ede8 *_field1;
    reffed_ptr_3c29ede8 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        reffed_ptr_3c29ede8 *_field1;
    } _field3;
} vector_fe8c6592;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
    reffed_ptr_eca42765 *_field1;
    reffed_ptr_eca42765 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
        reffed_ptr_eca42765 *_field1;
    } _field3;
} vector_8e13786b;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
    reffed_ptr_a24f2af8 *__begin_;
    reffed_ptr_a24f2af8 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
        reffed_ptr_a24f2af8 *__value_;
    } __end_cap_;
} vector_47b6fe56;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::MutableState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
    reffed_ptr_57016b98 *_field1;
    reffed_ptr_57016b98 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MutableState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
        reffed_ptr_57016b98 *_field1;
    } _field3;
} vector_4b334fea;

typedef struct vector<gmscore::math::Vector2f, std::__1::allocator<gmscore::math::Vector2f>> {
    struct Vector2f *__begin_;
    struct Vector2f *__end_;
    struct __compressed_pair<gmscore::math::Vector2f *, std::__1::allocator<gmscore::math::Vector2f>> {
        struct Vector2f *__value_;
    } __end_cap_;
} vector_c5a5cb90;

typedef struct vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>> {
    struct AbsolutePosition *__begin_;
    struct AbsolutePosition *__end_;
    struct __compressed_pair<gmscore::model::AbsolutePosition *, std::__1::allocator<gmscore::model::AbsolutePosition>> {
        struct AbsolutePosition *__value_;
    } __end_cap_;
} vector_adfa1f2f;

typedef struct vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>> {
    struct Alignment *__begin_;
    struct Alignment *__end_;
    struct __compressed_pair<gmscore::model::Alignment *, std::__1::allocator<gmscore::model::Alignment>> {
        struct Alignment *__value_;
    } __end_cap_;
} vector_0dce662e;

typedef struct vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>> {
    struct LabelGroup *__begin_;
    struct LabelGroup *__end_;
    struct __compressed_pair<gmscore::model::LabelGroup *, std::__1::allocator<gmscore::model::LabelGroup>> {
        struct LabelGroup *__value_;
    } __end_cap_;
} vector_99d15d9f;

typedef struct vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>> {
    struct Point2D *__begin_;
    struct Point2D *__end_;
    struct __compressed_pair<gmscore::model::Point2D *, std::__1::allocator<gmscore::model::Point2D>> {
        struct Point2D *__value_;
    } __end_cap_;
} vector_52d06928;

typedef struct vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>> {
    struct Point3D *__begin_;
    struct Point3D *__end_;
    struct __compressed_pair<gmscore::model::Point3D *, std::__1::allocator<gmscore::model::Point3D>> {
        struct Point3D *__value_;
    } __end_cap_;
} vector_5a6265c0;

typedef struct vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>> {
    struct Stroke *__begin_;
    struct Stroke *__end_;
    struct __compressed_pair<gmscore::model::Stroke *, std::__1::allocator<gmscore::model::Stroke>> {
        struct Stroke *__value_;
    } __end_cap_;
} vector_05d103ca;

typedef struct vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
    struct NormalVector *__begin_;
    struct NormalVector *__end_;
    struct __compressed_pair<gmscore::model::stripified_mesh::NormalVector *, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
        struct NormalVector *__value_;
    } __end_cap_;
} vector_42289879;

typedef struct vector<gmscore::renderer::RenderBin *, std::__1::allocator<gmscore::renderer::RenderBin *>> {
    struct RenderBin **_field1;
    struct RenderBin **_field2;
    struct __compressed_pair<gmscore::renderer::RenderBin **, std::__1::allocator<gmscore::renderer::RenderBin *>> {
        struct RenderBin **_field1;
    } _field3;
} vector_ef47c132;

typedef struct vector<gmscore::vector::ColorSpan, std::__1::allocator<gmscore::vector::ColorSpan>> {
    struct ColorSpan *__begin_;
    struct ColorSpan *__end_;
    struct __compressed_pair<gmscore::vector::ColorSpan *, std::__1::allocator<gmscore::vector::ColorSpan>> {
        struct ColorSpan *__value_;
    } __end_cap_;
} vector_c36147bd;

typedef struct vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>> {
    struct ColoredPoint *__begin_;
    struct ColoredPoint *__end_;
    struct __compressed_pair<gmscore::vector::ColoredPoint *, std::__1::allocator<gmscore::vector::ColoredPoint>> {
        struct ColoredPoint *__value_;
    } __end_cap_;
} vector_79ffaa35;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
} vector_12bd641b;

typedef struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__value_;
    } __end_cap_;
} vector_bbba3654;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *_field1;
    basic_string_90719d97 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *_field1;
    } _field3;
} vector_9492931a;

typedef struct vector<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
    vector_52d06928 *_field1;
    vector_52d06928 *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>*, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
        vector_52d06928 *_field1;
    } _field3;
} vector_f04d5db1;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
} vector_a3426c4e;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
} vector_12da65de;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
} vector_8d85e9cb;

#pragma mark Named Unions

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union sigval {
    int _field1;
    void *_field2;
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GMSx_GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_7ae79ea2;

