//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "IESGmSkfApi-Protocol.h"

@class NSString;

@interface ESGmSkfApi : NSObject <IESGmSkfApi>
{
    unsigned int _lastErrorCode;
    struct IEsGMApi *_coreApi;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)shareApi;
@property(nonatomic) unsigned int lastErrorCode; // @synthesize lastErrorCode=_lastErrorCode;
@property(nonatomic) struct IEsGMApi *coreApi; // @synthesize coreApi=_coreApi;
- (unsigned int)setFpAlias:(unsigned long long)arg1 PINType:(unsigned int)arg2 fpID:(int)arg3 Alias:(id)arg4;
- (unsigned int)unblockFp:(unsigned long long)arg1 PINType:(unsigned int)arg2 PIN:(id)arg3 remainRetryCount:(out int *)arg4;
- (unsigned int)clearFp:(unsigned long long)arg1 PINType:(unsigned int)arg2;
- (unsigned int)enumFp:(unsigned long long)arg1 PINType:(unsigned int)arg2 fpInfos:(out id *)arg3;
- (unsigned int)enumAvailableFpID:(unsigned long long)arg1 PINType:(unsigned int)arg2 fpIds:(out id *)arg3;
- (unsigned int)cancelFpOperation;
- (unsigned int)getFpInfo:(unsigned long long)arg1 PINType:(unsigned int)arg2 maxRetryCount:(out int *)arg3 remainRetryCount:(out int *)arg4;
- (unsigned int)verifyFp:(unsigned long long)arg1 PINType:(unsigned int)arg2 retryCount:(out int *)arg3 uiCallback:(CDUnknownBlockType)arg4;
- (unsigned int)unregister:(in unsigned long long)arg1 PINType:(unsigned int)arg2 fpID:(int)arg3;
- (unsigned int)registerFp:(in unsigned long long)arg1 PINType:(unsigned int)arg2 FpID:(int)arg3 aliasName:(id)arg4 uiCallback:(CDUnknownBlockType)arg5;
- (unsigned int)closeHandle:(unsigned long long)arg1;
- (unsigned int)thresholdDecryptFull:(unsigned long long)arg1 PIN:(id)arg2 encryptedData:(id)arg3 t2Data:(id)arg4 plainData:(out id *)arg5;
- (unsigned int)thresholdDecryptPart:(unsigned long long)arg1 PIN:(id)arg2 encryptedData:(id)arg3 plainData:(out id *)arg4;
- (unsigned int)thresholdSignDataFull:(unsigned long long)arg1 PIN:(id)arg2 s2Data:(id)arg3 s3Data:(id)arg4 rData:(id)arg5 thresholdSignatureData:(out id *)arg6;
- (unsigned int)thresholdSignDataPart:(unsigned long long)arg1 PIN:(id)arg2 data:(id)arg3 thresholdSignatureData:(out id *)arg4;
- (unsigned int)genThresholdKeyPair:(unsigned long long)arg1 PIN:(id)arg2 p1Data:(id)arg3 thresholdEnvelopedKeyData:(out id *)arg4;
- (unsigned int)macFinal:(unsigned long long)arg1 cipherData:(out id *)arg2;
- (unsigned int)macUpdate:(unsigned long long)arg1 data:(id)arg2;
- (unsigned int)mac:(unsigned long long)arg1 data:(id)arg2 cipherData:(out id *)arg3;
- (unsigned int)macInit:(unsigned long long)arg1 cipherParam:(id)arg2 macHandle:(out unsigned long long *)arg3;
- (unsigned int)digestFinal:(unsigned long long)arg1 hashData:(out id *)arg2;
- (unsigned int)digestUpdate:(unsigned long long)arg1 data:(id)arg2;
- (unsigned int)digest:(unsigned long long)arg1 data:(id)arg2 hashData:(out id *)arg3;
- (unsigned int)digestInit:(unsigned int)arg1 eccPublicKeyData:(id)arg2 signIDData:(id)arg3 hashHandle:(unsigned long long *)arg4;
- (unsigned int)decryptFinal:(unsigned long long)arg1 plainData:(out id *)arg2;
- (unsigned int)decryptUpdate:(unsigned long long)arg1 encryptedData:(id)arg2 plainData:(out id *)arg3;
- (unsigned int)decrypt:(unsigned long long)arg1 encryptedData:(id)arg2 plainData:(out id *)arg3;
- (unsigned int)decryptInit:(unsigned long long)arg1 cipherParam:(id)arg2;
- (unsigned int)encryptFinal:(unsigned long long)arg1 cipherData:(out id *)arg2;
- (unsigned int)encryptUpdate:(unsigned long long)arg1 data:(id)arg2 cipherData:(out id *)arg3;
- (unsigned int)encrypt:(unsigned long long)arg1 data:(id)arg2 cipherData:(out id *)arg3;
- (unsigned int)encryptInit:(unsigned long long)arg1 cipherParam:(id)arg2;
- (unsigned int)setSymmKey:(unsigned long long)arg1 sessionKey:(id)arg2 algId:(unsigned int)arg3 keyHandle:(unsigned long long *)arg4;
- (unsigned int)importSessionKey:(unsigned long long)arg1 PIN:(id)arg2 algId:(unsigned int)arg3 wrappedData:(id)arg4 keyHandle:(unsigned long long *)arg5;
- (unsigned int)exportECCPublicKey:(unsigned long long)arg1 signCertificate:(_Bool)arg2 eccPublicKeyData:(out id *)arg3;
- (unsigned int)generateAgreementDataAndKeyWithECC:(unsigned long long)arg1 algId:(unsigned int)arg2 sponsorECCpubKeyData:(id)arg3 tempSponsorECCPubKeyData:(id)arg4 responderIDData:(id)arg5 sponsorIDDat:(id)arg6 tempResponderECCPubKeyData:(out id *)arg7 keyHandle:(out unsigned long long *)arg8;
- (unsigned int)generateKeyWithECC:(unsigned long long)arg1 eccPubKeyData:(id)arg2 tempECCPubKeyData:(id)arg3 responderIDData:(id)arg4 keyHandle:(out unsigned long long *)arg5;
- (unsigned int)generateAgreemntDataWithECC:(unsigned long long)arg1 algId:(unsigned int)arg2 sponsorIDData:(id)arg3 tempECCPubKeyData:(out id *)arg4 agreementHandle:(unsigned long long *)arg5;
- (unsigned int)eccPriKeyOperation:(unsigned long long)arg1 PIN:(id)arg2 encryptedData:(id)arg3 plainData:(out id *)arg4;
- (unsigned int)extECCEncrypt:(id)arg1 plainData:(id)arg2 eccCipherData:(out id *)arg3;
- (unsigned int)eccExportSessionKey:(unsigned long long)arg1 algId:(unsigned int)arg2 eccPublicKeyData:(id)arg3 eccCipherData:(id *)arg4 sessionKeyHandle:(unsigned long long *)arg5;
- (unsigned int)eccVerify:(id)arg1 data:(id)arg2 eccSignatureData:(id)arg3;
- (unsigned int)eccSignData:(unsigned long long)arg1 PIN:(id)arg2 data:(id)arg3 eccSignatureData:(out id *)arg4;
- (unsigned int)importECCKeyPair:(unsigned long long)arg1 PIN:(id)arg2 eccEnvelopedKeyData:(id)arg3;
- (unsigned int)genECCKeyPair:(unsigned long long)arg1 PIN:(id)arg2 eccPublicKeyData:(out id *)arg3;
- (unsigned int)exportRSAPublicKey:(unsigned long long)arg1 signCertificate:(_Bool)arg2 rsaPublicKeyData:(out id *)arg3;
- (unsigned int)rsaPriKeyOperation:(unsigned long long)arg1 PIN:(id)arg2 encryptedData:(id)arg3 plainData:(out id *)arg4;
- (unsigned int)rsaPriKeyOperation:(unsigned long long)arg1 keyType:(_Bool)arg2 PIN:(id)arg3 encryptedData:(id)arg4 plainData:(out id *)arg5;
- (unsigned int)extRSAPubKeyOperation:(id)arg1 input:(id)arg2 cipherData:(out id *)arg3;
- (unsigned int)rsaExportSessionKey:(unsigned long long)arg1 algId:(unsigned int)arg2 publicKeyData:(id)arg3 cipherData:(id *)arg4 keyHandle:(unsigned long long *)arg5;
- (unsigned int)rsaVerify:(id)arg1 data:(id)arg2 signatureData:(id)arg3;
- (unsigned int)rsaSignData:(unsigned long long)arg1 PIN:(id)arg2 data:(id)arg3 signatureData:(out id *)arg4;
- (unsigned int)importRSAKeyPair:(unsigned long long)arg1 PIN:(id)arg2 symmAlgId:(unsigned int)arg3 wrappedKey:(id)arg4 encryptedData:(id)arg5;
- (unsigned int)genRSAKeyPair:(unsigned long long)arg1 PIN:(id)arg2 bitsLength:(int)arg3 publicKeyData:(out id *)arg4;
- (unsigned int)genRandom:(int)arg1 data:(out id *)arg2;
- (unsigned int)exportCertificate:(unsigned long long)arg1 signCertificate:(_Bool)arg2 certificateData:(out id *)arg3;
- (unsigned int)importCertificate:(unsigned long long)arg1 signCertificate:(_Bool)arg2 certificateData:(id)arg3;
- (unsigned int)getContainerType:(unsigned long long)arg1 containerType:(unsigned int *)arg2;
- (unsigned int)enumContainer:(unsigned long long)arg1 containerNames:(out id *)arg2;
- (unsigned int)closeContainer:(unsigned long long)arg1;
- (unsigned int)openContainer:(unsigned long long)arg1 containerName:(id)arg2 containerHandle:(unsigned long long *)arg3;
- (unsigned int)deleteContainer:(unsigned long long)arg1 containerName:(id)arg2;
- (unsigned int)createContainer:(unsigned long long)arg1 containerName:(id)arg2 containerHandle:(unsigned long long *)arg3;
- (unsigned int)writeFile:(unsigned long long)arg1 fileName:(id)arg2 offset:(int)arg3 fileData:(id)arg4;
- (unsigned int)readFile:(unsigned long long)arg1 fileName:(id)arg2 offset:(int)arg3 length:(int)arg4 fileData:(out id *)arg5;
- (unsigned int)getFileInfo:(unsigned long long)arg1 fileName:(id)arg2 fileInfo:(out id *)arg3;
- (unsigned int)enumFiles:(unsigned long long)arg1 fileNames:(out id *)arg2;
- (unsigned int)deleteFile:(unsigned long long)arg1 fileName:(id)arg2;
- (unsigned int)createFile:(unsigned long long)arg1 fileName:(id)arg2 fileSize:(int)arg3 readRights:(unsigned int)arg4 writeRights:(unsigned int)arg5;
- (unsigned int)closeApplication:(unsigned long long)arg1;
- (unsigned int)openApplication:(id)arg1 applicationHandle:(out unsigned long long *)arg2;
- (unsigned int)deleteApplication:(id)arg1;
- (unsigned int)enumApplication:(out id *)arg1;
- (unsigned int)createApplication:(id)arg1 adminPIN:(id)arg2 adminPINMaxRetryCount:(int)arg3 userPIN:(id)arg4 userPINMaxRetryCount:(int)arg5 createFileRights:(unsigned int)arg6 applicationHandle:(out unsigned long long *)arg7;
- (unsigned int)unblockPIN:(unsigned long long)arg1 adminPIN:(id)arg2 newUserPIN:(id)arg3 remainRetryCount:(out int *)arg4;
- (unsigned int)changeDevAuthKey:(id)arg1 toNew:(id)arg2;
- (unsigned int)devAuth:(id)arg1;
- (unsigned int)clearSecureState:(unsigned long long)arg1;
- (unsigned int)verifyPIN:(unsigned long long)arg1 PINType:(unsigned int)arg2 PIN:(id)arg3 remainRetryCount:(out int *)arg4;
- (unsigned int)getRemainRetryCount:(unsigned long long)arg1 PINType:(unsigned int)arg2 maxRetryCount:(out int *)arg3 remainRetryCount:(out int *)arg4 isDefaultPIN:(out _Bool *)arg5;
- (unsigned int)changePIN:(unsigned long long)arg1 PINType:(unsigned int)arg2 oldPIN:(id)arg3 newPIN:(id)arg4 remainRetryCount:(out int *)arg5;
- (unsigned int)closeDevice;
- (unsigned int)sendAPDU:(id)arg1 responseData:(out id *)arg2;
- (unsigned int)getDevInfo:(out id *)arg1;
- (unsigned int)initSkfApi:(id)arg1 bundleName:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setDefaults;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

