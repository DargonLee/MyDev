//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "FWIMClientDelegate-Protocol.h"
#import "FWIMConnectionStatusDelegate-Protocol.h"
#import "FWIMUserInfoDataSource-Protocol.h"
#import "FWNetWorkInfoDataSource-Protocol.h"
#import "FWSettingViewControllerDelegate-Protocol.h"

@class NSCache, NSDataDetector, NSDictionary, NSManagedObjectContext, NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString, UIAlertView;

@interface FWChatNetAndDataObject : NSObject <FWIMConnectionStatusDelegate, FWSettingViewControllerDelegate, FWIMUserInfoDataSource, FWNetWorkInfoDataSource, FWIMClientDelegate>
{
    long long _failureCount;
    UIAlertView *_alert;
    NSManagedObjectContext *_rcChatcoreDataContext;
    NSManagedObjectContext *_rcChatcoreDataWriteContext;
    NSManagedObjectContext *_rcBackOperationContext;
    NSString *_startConversationIqID;
    NSDictionary *_startGroupIqIDDic;
    NSMutableArray *_startPersons;
    NSMutableArray *_endPersons;
    NSCache *_userInfoCache;
    NSMutableDictionary *_publicNoticeSynDict;
    NSMutableDictionary *_privateMsgLifeDict;
    NSMutableDictionary *_privateMsgLifeTimerDict;
    NSOperationQueue *_operationQueue;
    NSString *_previousMd5Str;
    NSMutableDictionary *_personHeads;
    NSMutableDictionary *_personDic;
    NSMutableDictionary *_getUnreadCountTaskDictionary;
    NSDataDetector *_dataDetector;
}

+ (int)getGroupLimitDefault;
+ (int)getGroupLimit;
+ (void)didTapPersonDetailInMessageCell:(id)arg1;
+ (void)didTapUrlInMessageCell:(id)arg1;
+ (_Bool)canGetTaskFoucesModelWithMsgId:(id)arg1;
+ (_Bool)getCellDisplayIsDisableMsgRead;
+ (void)saveConversationlistAtsombodysForTargid:(id)arg1 msgid:(id)arg2;
+ (void)removeConversationlistAtsombodysForTargid:(id)arg1;
+ (_Bool)isAtmeInChatWithTargid:(id)arg1;
+ (void)figureOutAllConversationDataRepositoryWithArray:(id)arg1;
+ (id)getGroupTypeUrlWith:(int)arg1;
+ (_Bool)getClearHistory;
+ (_Bool)getMsgAudioMode;
+ (double)tabbarHeight;
+ (_Bool)getMsgThumbnailMode;
+ (void)showAlertSysPubWithContent:(id)arg1;
+ (void)getUnreadCountFromServer:(id)arg1;
+ (void)clearRongUserInfoAndGroupInfoCache;
+ (void)getHistoryForSearchWithConversation:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)customShareMsgToUrl:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (id)createColorString:(id)arg1 start:(long long)arg2 length:(long long)arg3 font:(id)arg4 orginColor:(id)arg5;
+ (id)createColorString:(id)arg1 searchString:(id)arg2 fontsize:(long long)arg3;
+ (id)createColorString:(id)arg1 searchString:(id)arg2 fontsize:(long long)arg3 orginColor:(id)arg4;
+ (id)getBackStringWithCount:(long long)arg1;
+ (id)getPrefix:(id)arg1;
+ (_Bool)isCustomShareVoteKind:(id)arg1;
+ (_Bool)isWithdrawMsg:(id)arg1;
+ (_Bool)isPrivateMsg:(id)arg1;
+ (_Bool)checkInfoMsg:(id)arg1 type:(long long)arg2;
+ (_Bool)isManagerWithDiscussion:(id)arg1;
+ (id)trimSearchText:(id)arg1;
+ (_Bool)checkContentStringWithStr:(id)arg1 search:(id)arg2;
+ (_Bool)checkSearchMsg:(id)arg1;
+ (id)praseSubTilte:(id)arg1 searchString:(id)arg2;
+ (id)fetchModeFromRs:(id)arg1 content:(id)arg2;
+ (id)fetchMsgSearchArray:(id)arg1 searchText:(id)arg2 db:(id)arg3 type:(long long)arg4 arg:(id)arg5;
+ (void)searchFromRongStorageWithString:(id)arg1 targetId:(id)arg2 pageNumber:(int)arg3 conversationType:(unsigned long long)arg4 op:(id)arg5 completion:(CDUnknownBlockType)arg6;
+ (void)searchFromRemoteWithTargetId:(id)arg1 msgType:(id)arg2 pageNumber:(int)arg3 conversationType:(unsigned long long)arg4 completion:(CDUnknownBlockType)arg5;
+ (_Bool)isCansendMsgWithUserid:(id)arg1;
+ (void)sendPushKitMessage:(id)arg1 userList:(id)arg2;
+ (id)timingResult:(long long)arg1;
+ (id)getVoipMsgContentWith:(id)arg1 type:(unsigned long long)arg2 duration:(long long)arg3;
+ (void)sendVoipMsgWith:(id)arg1 type:(unsigned long long)arg2 duration:(long long)arg3;
+ (void)interactivePublicNoticeWithServerWithParams:(id)arg1 sucess:(CDUnknownBlockType)arg2;
+ (void)synPublicNoticeToCacheWithDict:(id)arg1 isVoteKind:(_Bool)arg2;
+ (void)synPublicNoticeWithTargetId:(id)arg1;
+ (id)findArrayWithTargetId:(id)arg1 ascending:(_Bool)arg2;
+ (void)pushToChatWithArrray:(id)arg1 navController:(id)arg2 discussTitle:(id)arg3 isPrivate:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)pushToChatWithArrray:(id)arg1 navController:(id)arg2 discussTitle:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)getPushPrefixWithString:(id)arg1;
+ (id)sendMessage:(id)arg1 pushContent:(id)arg2 conversation:(id)arg3 transMode:(long long)arg4 isUpload:(_Bool)arg5 fromOtherApp:(_Bool)arg6;
+ (void)refreshChatVC;
+ (void)refreshConversationList;
+ (void)rebuildUDIDMessageWithMessage:(id)arg1 conversation:(id)arg2 memberList:(CDUnknownBlockType)arg3;
+ (void)addUDIDForUDIDMessageWithMemberList:(id)arg1 message:(id)arg2;
+ (void)addUDIDForUDIDMessageWithMemberList:(id)arg1 message:(id)arg2 isPrivate:(_Bool)arg3;
+ (void)withdrawMessageWith:(id)arg1 senderUserId:(id)arg2 messageId:(long long)arg3 infoMsgId:(long long)arg4 callback:(CDUnknownBlockType)arg5;
+ (void)updateMessageStatusWithMessageId:(id)arg1 senderId:(id)arg2 needPost:(_Bool)arg3;
+ (void)insertCountCommandMessageWithArray:(id)arg1 msgId:(id)arg2;
+ (void)insertRemoteCountCommandMessageWithReadArray:(id)arg1 unreadArray:(id)arg2 msgId:(id)arg3 block:(CDUnknownBlockType)arg4;
+ (_Bool)isRongId:(id)arg1;
+ (id)convertSecondsToMinute:(id)arg1;
+ (id)evaluatePrivateMsgLife:(id)arg1 direction:(unsigned long long)arg2;
+ (void)updateDingConverstionlistWithLastTime:(double)arg1 messageContent:(id)arg2 targetId:(id)arg3;
+ (void)insertOrUpdateFocusTaskModel:(id)arg1 dingDic:(id)arg2 isneed:(_Bool)arg3;
+ (void)updateTaskDetailWithDict:(id)arg1 targetId:(id)arg2;
+ (_Bool)judgeMesageTypeWhichIsTipMessage:(id)arg1;
+ (_Bool)judgeMesageTypeWhichIsTipMessageWihtObjectName:(id)arg1;
+ (_Bool)judgeMesageTypeWhichHaveUDID:(id)arg1;
+ (void)sendCountMsgWithMessageId:(id)arg1 sendid:(id)arg2;
+ (void)sendMessageEnqueue:(CDUnknownBlockType)arg1;
+ (_Bool)isCommonWithPrivate:(unsigned long long)arg1;
+ (id)getChatListVC;
+ (void)refreshBadge;
+ (id)getExpressionList;
+ (id)getConversationCanDeleAndSetTops;
+ (id)getCurrenLanguage;
+ (_Bool)filterMsgSensitiveWord:(id)arg1;
+ (void)sendImageMessageToLocalServerWithUploadListener:(id)arg1 orginImage:(id)arg2 MemberList:(id)arg3 targetId:(id)arg4;
+ (void)sendImageMessageToLocalServerWithUploadListener:(id)arg1 orginImage:(id)arg2 params:(id)arg3;
+ (void)sendFileMessageToLocalServerWithUploadListener:(id)arg1 params:(id)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NSDataDetector *dataDetector; // @synthesize dataDetector=_dataDetector;
@property(retain, nonatomic) NSMutableDictionary *getUnreadCountTaskDictionary; // @synthesize getUnreadCountTaskDictionary=_getUnreadCountTaskDictionary;
@property(retain, nonatomic) NSMutableDictionary *personDic; // @synthesize personDic=_personDic;
@property(retain, nonatomic) NSMutableDictionary *personHeads; // @synthesize personHeads=_personHeads;
@property(retain, nonatomic) NSString *previousMd5Str; // @synthesize previousMd5Str=_previousMd5Str;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSMutableDictionary *privateMsgLifeTimerDict; // @synthesize privateMsgLifeTimerDict=_privateMsgLifeTimerDict;
@property(retain, nonatomic) NSMutableDictionary *privateMsgLifeDict; // @synthesize privateMsgLifeDict=_privateMsgLifeDict;
@property(retain, nonatomic) NSMutableDictionary *publicNoticeSynDict; // @synthesize publicNoticeSynDict=_publicNoticeSynDict;
@property(retain, nonatomic) NSCache *userInfoCache; // @synthesize userInfoCache=_userInfoCache;
@property(retain, nonatomic) NSMutableArray *endPersons; // @synthesize endPersons=_endPersons;
@property(retain, nonatomic) NSMutableArray *startPersons; // @synthesize startPersons=_startPersons;
@property(copy, nonatomic) NSDictionary *startGroupIqIDDic; // @synthesize startGroupIqIDDic=_startGroupIqIDDic;
@property(copy, nonatomic) NSString *startConversationIqID; // @synthesize startConversationIqID=_startConversationIqID;
@property(retain, nonatomic) NSManagedObjectContext *rcBackOperationContext; // @synthesize rcBackOperationContext=_rcBackOperationContext;
@property(retain, nonatomic) NSManagedObjectContext *rcChatcoreDataWriteContext; // @synthesize rcChatcoreDataWriteContext=_rcChatcoreDataWriteContext;
@property(retain, nonatomic) NSManagedObjectContext *rcChatcoreDataContext; // @synthesize rcChatcoreDataContext=_rcChatcoreDataContext;
- (id)fetChlinkAndNumberWithText:(id)arg1 isReply:(_Bool)arg2 isDeep:(_Bool)arg3 tapAction:(CDUnknownBlockType)arg4;
- (void)getReadAttributedStringWith:(id)arg1 isDisable:(_Bool)arg2 isAsync:(_Bool)arg3 isReply:(_Bool)arg4 Comple:(CDUnknownBlockType)arg5 tapAction:(CDUnknownBlockType)arg6;
- (void)willSendMessage;
- (id)localizedStringForKey:(id)arg1;
- (void)getConversationWithSearchText:(id)arg1 pageNumber:(long long)arg2 Completion:(CDUnknownBlockType)arg3;
- (void)getAllGroupsWithSearchText:(id)arg1 pageNumber:(long long)arg2 pageSize:(int)arg3 parm:(id)arg4 Completion:(CDUnknownBlockType)arg5;
- (void)getSearchPersonWithString:(id)arg1 allPerson:(_Bool)arg2 pageSize:(id)arg3 isonline:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)searchFromRongStorageWithString:(id)arg1 allPerson:(_Bool)arg2 searchContent:(long long)arg3 pageSize:(id)arg4 isonline:(_Bool)arg5 op:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (_Bool)isNeedLocalUnreadStatus:(id)arg1;
- (void)cacheFileWithlocalPath:(id)arg1 fileid:(id)arg2;
- (void)insertMessageUnreadCount:(int)arg1 msgId:(id)arg2;
- (id)getMsgIdWith:(id)arg1 tarId:(id)arg2;
- (void)setConversationNotificationStatus:(unsigned long long)arg1 targetId:(id)arg2 success:(CDUnknownBlockType)arg3;
- (id)getAuthenticationHeader;
- (void)changeGroupMediaid:(id)arg1 tagetId:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)changeGroupTitle:(id)arg1 tagetId:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getDataWithUrlString:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)secondAuthWithNav:(id)arg1 canSecondAuth:(_Bool)arg2 completion:(CDUnknownBlockType)arg3 fail:(CDUnknownBlockType)arg4;
- (_Bool)showOnlinePreview:(id)arg1;
- (double)getGlobalFontMulti;
- (_Bool)isHaveGroupDisableButton;
- (_Bool)isHaveGroupShareButton;
- (_Bool)isHaveAlbumButton;
- (_Bool)isHaveQuickReplyButton;
- (id)getMainTenantName;
- (_Bool)isShowCreatewxgroup;
- (_Bool)isHiddenUserName;
- (id)getUserTenantWithUserId:(id)arg1;
- (id)getUsernameWithUserid:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)getUserPositionWithUserId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)getMsgCountWithCountStr:(id)arg1 isdefault:(_Bool)arg2;
- (_Bool)getSecretGroupAuthority;
- (int)getReadStateslimitCount;
- (int)isCanOpenETPush;
- (int)isCanSetGroupTag;
- (id)getSeeHistoryChatCountMsgs;
- (_Bool)conversationCanDeleAndSetTopWithTargerId:(id)arg1 isTop:(_Bool)arg2;
- (void)uploadGroupHeaderWithImage:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getHeaderWithGroupMediaid:(id)arg1 imageVI:(id)arg2;
- (void)getHeaderWithUserId:(id)arg1 imageVI:(id)arg2;
- (void)startSecondAuthWithNav:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getGroupheaderImageIdWithUsers:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getUserInfoWithUserId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeUserInfoCacheWithUserId:(id)arg1;
- (void)updateCachePersonNameWithbaseUserId:(id)arg1 userName:(id)arg2;
- (void)removeAlluserInfoCache;
- (void)clearMemoryCache;
- (id)getUserNameWithUserId:(id)arg1;
- (id)getAssetWithPath:(id)arg1;
- (id)getFullUrlWithResourcePath:(id)arg1;
- (id)getFullUrlWithMediaId:(id)arg1;
- (void)judgeVersionWithDateDic:(id)arg1 key:(id)arg2 oldVersion:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)getVersionWithKey:(id)arg1;
- (void)registerJPushWithOptions:(id)arg1;
- (void)registerETPushRemoteNotification;
- (void)registerWhichRemote;
- (void)connectToRongCloudWithJson:(id)arg1;
- (void)recaptureTokenWhenTokenInCorrectORTokenNotExisted;
- (void)connectServer;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)onFWIMConnectionStatusChanged:(long long)arg1;
- (void)disconnect;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

