//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface FWWorkCenterUtility : NSObject
{
}

+ (double)tabbarHeight;
+ (id)filterMsg:(id)arg1 sensitiveword:(id)arg2;
+ (void)present:(id)arg1 animated:(_Bool)arg2;
+ (int)getCurrentBatteryLevel;
+ (_Bool)locationServicesEnabled;
+ (id)getUrlWithLanguange:(id)arg1;
+ (id)viewControllerWithView:(id)arg1;
+ (id)getNetworkType;
+ (id)dictionaryToJSONString:(id)arg1;
+ (id)sha1:(id)arg1;
+ (long long)videoOrientationFromCurrentDeviceOrientationWith:(long long)arg1;
+ (void)displayTopRightViewOnTabbarcontroller;
+ (void)hideTopRightViewOnTabbarcontroller;
+ (struct CGRect)getLandScapeFullScreenFrame;
+ (_Bool)checkVersion;
+ (id)getIPAddresses;
+ (id)getIPAddress:(_Bool)arg1;
+ (int)isInnerIP:(id)arg1;
+ (void)pushWithRemoteNotification:(id)arg1;
+ (void)pushChatVCWithRemoteNotification:(id)arg1;
+ (id)laodAngeUnredCountWithange:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (void)laodAngeUnredCountWithange:(id)arg1 Comple:(CDUnknownBlockType)arg2;
+ (_Bool)isPushControllerWith:(id)arg1;
+ (long long)getDeviceOrientation;
+ (void)interfaceOrientation:(long long)arg1;
+ (id)convertChineseToSimplePinyin:(id)arg1;
+ (id)convertChineseToPinyin:(id)arg1;
+ (struct CGSize)getSizeFromText:(id)arg1 withFont:(id)arg2;
+ (void)alertViewShow:(id)arg1;
+ (void)addToABRecordinfoDic:(id)arg1;
+ (void)exportPersonInfoWithInfoDic:(id)arg1;
+ (_Bool)customValidationcertName:(id)arg1 challenge:(id)arg2;
+ (int)extractP12Data:(id)arg1 toIdentity:(struct __SecIdentity **)arg2 withPassphrase:(id)arg3;
+ (CDUnknownBlockType)receiveAuthenticationChallengeBlockofManager:(id)arg1;
+ (id)imageForView:(id)arg1;
+ (id)screenShotImage;
+ (id)blurryImage:(id)arg1 withBlurLevel:(double)arg2;
+ (id)foundSectionArray:(id)arg1;
+ (id)bundleSeedID;
+ (_Bool)checkHTTPEnable;
+ (id)convertPCMtoMP3:(id)arg1 andDesPath:(id)arg2;
+ (id)mimeTypeForData:(id)arg1;
+ (_Bool)isChinese:(id)arg1;
+ (id)formatString:(id)arg1;
+ (id)getUserAgent;
+ (void)saveUserAgent:(id)arg1;
+ (_Bool)isNeedDeepColor:(id)arg1;
+ (id)getRealLgginUrl:(id)arg1;
+ (void)changeUserAgentForWebView:(id)arg1;
+ (id)findHairlineImageViewUnder:(id)arg1;
+ (void)showDetailVcWith:(id)arg1 navVc:(id)arg2;
+ (void)showScanResultVC:(id)arg1 navVC:(id)arg2;
+ (id)QRReaderDidFinishRead:(id)arg1 NavVc:(id)arg2 isFromPic:(_Bool)arg3;
+ (id)QRFromPic:(id)arg1 NavVc:(id)arg2;
+ (id)QRReaderDidFinishRead:(id)arg1 NavVc:(id)arg2;
+ (id)getOrginUseridWith:(id)arg1;
+ (void)removeMemberWithUserid:(id)arg1 InArry:(id)arg2;
+ (_Bool)iscontainsMemberId:(id)arg1 InArry:(id)arg2;
+ (id)getLowerRongyunUseridWith:(id)arg1;
+ (id)getRongyunUseridWith:(id)arg1;
+ (id)md5:(id)arg1;
+ (id)getMainUsernameWith:(id)arg1;
+ (_Bool)isCanSendMsgToUserWithPerson:(id)arg1;
+ (id)getPersonUserName:(id)arg1;
+ (id)getPersonMobile:(id)arg1;
+ (id)getPersonTelPhone:(id)arg1;
+ (id)getPersonUserNameWithUserId:(id)arg1;
+ (void)getPersonUserNameWithUserId:(id)arg1 complete:(CDUnknownBlockType)arg2;
+ (id)transformWithPerson:(id)arg1;
+ (id)getMainUseridWith:(id)arg1;
+ (id)getUseridWith:(id)arg1;
+ (id)getPersonWithbaseUserId:(id)arg1;
+ (void)updateCachePersonNameWithbaseUserId:(id)arg1 userName:(id)arg2;
+ (void)getPersonWithbaseUserId:(id)arg1 complete:(CDUnknownBlockType)arg2;
+ (void)updatePersonWithbaseUserId:(id)arg1 complete:(CDUnknownBlockType)arg2;
+ (void)updePersonListsWithPersonlists:(id)arg1 complete:(CDUnknownBlockType)arg2;
+ (void)getPersonWithUserIds:(id)arg1 complete:(CDUnknownBlockType)arg2;
+ (void)setStatusBarStyle:(long long)arg1;
+ (void)setStatusBarLight;
+ (void)setStatusBarDefault;
+ (void)logoutWithClearPwd:(_Bool)arg1;
+ (void)logoutServerComplete:(CDUnknownBlockType)arg1;
+ (void)uMengInit;
+ (void)iFlyInit;
+ (id)getRootNavController;
+ (id)standardFormateMAC:(id)arg1;
+ (double)transformLonWithX:(double)arg1 y:(double)arg2;
+ (double)transformLatWithX:(double)arg1 y:(double)arg2;
+ (_Bool)outOfChina:(id)arg1;
+ (id)transformToMars:(id)arg1;
+ (void)halfFuntion:(id)arg1 image:(id)arg2 sourceData:(id)arg3 maxSize:(long long)arg4 resultBlock:(CDUnknownBlockType)arg5;
+ (id)newSizeImage:(struct CGSize)arg1 image:(id)arg2;
+ (id)resetSizeOfImageData:(id)arg1 maxSize:(long long)arg2;
+ (id)fixOrientation:(id)arg1;
+ (id)normalizedImage:(id)arg1;
+ (long long)lengthOfFile:(id)arg1;
+ (double)durationWithVideo:(id)arg1;
+ (void)addWaterViewInView:(id)arg1;
+ (id)captureWithView:(id)arg1;
+ (id)returnBackImageWithColor:(id)arg1;
+ (id)getImageWitnColorStr:(id)arg1;
+ (id)getReturenIconWithColor:(id)arg1;
+ (id)getCircleImageWithImage:(id)arg1;
+ (id)waterImageWithImage:(id)arg1 location:(id)arg2;
+ (id)imageToAddText:(id)arg1 withText:(id)arg2 font:(double)arg3;
+ (id)createImageWithColor:(id)arg1;
+ (id)imageWithBgColor:(id)arg1 text:(id)arg2 size:(struct CGSize)arg3 cornerRadius:(double)arg4 font:(double)arg5;
+ (id)getheadImageRootPath;
+ (id)getHeadImagePathWithPerson:(id)arg1;
+ (void)downImageView:(id)arg1 Url:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)creatLocalImageWith:(id)arg1 View:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)headImageWithPerson:(id)arg1 imageView:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)getHeadViewAvatarDicWith:(id)arg1;
+ (id)imageWithPerson:(id)arg1 size:(struct CGSize)arg2 font:(double)arg3;
+ (id)imageWithBgColor:(id)arg1 text:(id)arg2 size:(struct CGSize)arg3 font:(double)arg4;
+ (id)resizableImage:(id)arg1;
+ (id)getGBKStringFromString:(id)arg1;
+ (id)getDecodeQRResultFormImage:(id)arg1;
+ (id)scaleImage:(id)arg1 toSize:(struct CGSize)arg2;
+ (id)saveImagetoTemp:(id)arg1 ratio:(id)arg2;
+ (void)canAccessToMicrophone:(CDUnknownBlockType)arg1 denied:(CDUnknownBlockType)arg2;
+ (void)canAccessToAlbum:(CDUnknownBlockType)arg1;
+ (void)canAccessToCamera:(CDUnknownBlockType)arg1;
+ (id)getCurrentDate2;
+ (id)deviceKindVersion;
+ (_Bool)isIphoneX;
+ (id)getAbsolutePath:(id)arg1;
+ (void)canAcessToLocation:(CDUnknownBlockType)arg1;
+ (void)checkQYSAuthWithSuccess:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2 setting:(CDUnknownBlockType)arg3;
+ (id)checkGestureWithSuccess:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2 setting:(CDUnknownBlockType)arg3;
+ (void)checkFaceIDWithController:(id)arg1 Success:(CDUnknownBlockType)arg2 fail:(CDUnknownBlockType)arg3 isQualityOnly:(_Bool)arg4 params:(id)arg5;
+ (void)checkFingerPrintWithSuccess:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
+ (_Bool)biometricAvailable;
+ (_Bool)appleFaceIDAvailable;
+ (_Bool)isSecurityCheckOpened;
+ (id)dataToStringWithDict:(id)arg1;
+ (void)reloadCallIdentificationToSystem;
+ (id)readCallIdentificationFilePath;
+ (id)fixTel:(id)arg1;
+ (id)fixPhone:(id)arg1;
+ (id)trimTel:(id)arg1;
+ (id)trimOtherTel:(id)arg1;
+ (_Bool)isTrueLocaton:(id)arg1;
+ (void)disable_debugger;
+ (_Bool)isJailbroken;
+ (id)receiveTimeString:(id)arg1;
+ (id)chineseWeek:(id)arg1;
+ (id)getNotNilStr:(id)arg1;
+ (double)getTimeFromString:(id)arg1;
+ (id)getYMDDateFromString:(id)arg1;
+ (id)getDateFromString:(id)arg1;
+ (id)toGlobalTime:(id)arg1;
+ (id)getFileName:(id)arg1;
+ (id)getFileCachePath:(id)arg1;
+ (void)removeCacheWithDirectoryPath:(id)arg1 excludePathArray:(id)arg2;
+ (id)decompressionFile:(id)arg1;
+ (id)judgeFileByDeletingPathExtension:(id)arg1;
+ (id)URLDecodedString:(id)arg1;
+ (id)encodedString:(id)arg1;
+ (id)independentUrlWithString:(id)arg1 resolveUrl:(id)arg2;
+ (id)realUrlWithMediaId:(id)arg1;
+ (id)getFilePathWithURL:(id)arg1;
+ (id)getFilePath:(id)arg1;
+ (_Bool)settingPublicHeaderForObj:(id)arg1;
+ (id)base64_decode:(id)arg1;
+ (id)base64_encode_data:(id)arg1;
+ (id)getFileSuffix:(id)arg1;
+ (id)getFileType:(id)arg1;
+ (id)getWeekStringFromData:(id)arg1;
+ (id)getStringWithOutHMFromDate:(id)arg1;
+ (id)getStringYMDHMFromDate:(id)arg1;
+ (id)getStringYMDFromDate:(id)arg1;
+ (id)getStringFromDate:(id)arg1;
+ (id)UnsignedGUIDString;
+ (id)GUIDString;
+ (id)getParameterinUrlString:(id)arg1 key:(id)arg2;
+ (id)getCookieStringInCookie:(id)arg1;
+ (id)getNavTitleColorStrWithAppThemeIndex:(long long)arg1;
+ (_Bool)isEaqulColor1:(id)arg1 Color2:(id)arg2;
+ (id)colorWithRemoteColorStr:(id)arg1;
+ (id)getNavTopTextColor;
+ (id)getNavTopBgColorStr;
+ (id)getNavTopTitleStrWithNavID:(int)arg1;
+ (id)getNavTopBgColor;
+ (void)applyFontSetEffect;
+ (double)getGlobalFontMulti;
+ (id)getNavItemBackColorStr;
+ (id)colorWithHexString:(id)arg1;
+ (double)getColorValuesWithHexString:(id)arg1;
+ (void)crossVerticalScreenSwitchForTabbar;

@end

